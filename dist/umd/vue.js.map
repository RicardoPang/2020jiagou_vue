{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util/index.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice()\n\nlet oldArrayMethods = Array.prototype;\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods);\n\nconst methods = [\n  'push',\n  'shift',\n  'unshift',\n  'pop',\n  'sort',\n  'splice',\n  'reverse'\n]\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    const result = oldArrayMethods[method].apply(this, args); // 调用原生的数组方法\n    // push unshift 添加的元素可能还是一个对象\n    let inserted; // 当前用户插入的元素\n    let ob = this.__ob__;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice': // 3个  新增的属性 splice 有删除 新增的的功能 arr.splice(0,1,{name:1})\n        inserted = args.slice(2)\n      default:\n        break;\n    }\n    if (inserted) ob.observerArray(inserted); // 将新增属性继续观测\n\n    ob.dep.notify(); // 如果用户调用了 push方法 我会通知当前这个dep去更新\n    return result;\n  }\n})\n","/**\n *\n * @param {*} data  当前数据是不是对象\n */\nexport function isObject(data) {\n  return typeof data === 'object' && data !== null;\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}\n\n// 取值时实现代理效果\nexport function proxy(vm, source, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[source][key]\n    },\n    set(newValue) {\n      vm[source][key] = newValue;\n    }\n  })\n}\n\nconst LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed'\n];\n\nlet strats = {}\n\nfunction mergeHook(parentVal, childVal) {\n  if (childVal) {\n    if (parentVal) {\n      return parentVal.concat(childVal);\n    } else {\n      return [childVal];\n    }\n  } else {\n    return parentVal;\n  }\n}\n\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\nfunction mergeAssets(parentVal, childVal) {\n  const res = Object.create(parentVal) // res.__proto__ = parentVal\n  if (childVal) {\n    for (let key in childVal) {\n      res[key] = childVal[key];\n    }\n  }\n  return res;\n}\n\nstrats.components = mergeAssets\n\nexport function mergeOptions(parent, child) {\n  const options = {};\n  for (let key in parent) {\n    mergeField(key);\n  }\n  for (let key in child) { //  如果已经合并过了就不需要再次合并了\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key);\n    }\n  }\n\n  // 默认的合并策略 但是有些属性 需要有特殊的合并方式 生命周期的合并\n  function mergeField(key) {\n    if (strats[key]) {\n      return options[key] = strats[key](parent[key], child[key])\n    }\n    if (typeof parent[key] === 'object' && typeof child[key] === 'object') {\n      options[key] = {\n        ...parent[key],\n        ...child[key]\n      }\n    } else if (child[key] == null) {\n      options[key] = parent[key];\n    } else {\n      options[key] = child[key];\n    }\n  }\n\n  return options;\n}\n\n\nexport const isReservedTag = (tagName) => {\n\n  let str = 'p,div,span,input,button';\n  let obj = {}\n  str.split(',').forEach(tag => {\n    obj[tag] = true;\n  });\n\n  return obj[tagName];\n\n}\n","let id = 0;\n\nclass Dep {\n  constructor() {\n    this.id = id++;\n    this.subs = [];\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher); // 观察者模式\n  }\n\n  depend() {\n    // 让这个watcher 记住我当前的dep,如果watcher没存过dep ，dep肯定不能存过watcher\n    Dep.target.addDep(this);\n  }\n\n  notify() {\n    this.subs.forEach(watcher => watcher.update())\n  }\n}\n\nlet stack = [];\n\n// 目前可以做到 将watcher保留起来 和 移除的功能\nexport function pushTarget(watcher) {\n  Dep.target = watcher;\n  stack.push(watcher);\n}\n\nexport function popTarget() {\n  stack.pop();\n  Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep\n","// 把data中的数据 都使用Object.defineProperty重新定义 es5\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\nimport {arrayMethods} from './array.js'\nimport {\n  isObject, def\n} from '../util/index'\nimport Dep from './dep.js';\n\n// 后续我可以知道它是不是一个已经观察了的数据 __ob__\nclass Observer {\n  constructor(value) {  // 仅仅是初始化的操作\n    this.dep = new Dep; // 给数组用的\n    // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\n    // value.__ob__ = this; // 我给每一个监控过的对象都增加一个__ob__属性\n    def(value, '__ob__', this);\n    if (Array.isArray(value)) {\n      // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\n      // 前端开发中很少很少 去操作索引 push shift unshift\n      value.__proto__ = arrayMethods;\n      // 如果数组里放的是对象我再监控\n      this.observerArray(value); //  这里虽然递归了 但是没有依赖收集\n    } else {\n      // 对数组监控\n      this.walk(value); // 对对象进行观测\n    }\n  }\n\n  observerArray(value) { // [{}]\n    for (let i = 0; i < value.length; i++) {\n      observe(value[i]);\n    }\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // [name,age,address]\n    // 如果这个data 不可配置 直接reurn\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]);\n    });\n  }\n}\n\n// Vue.observable\nfunction defineReactive(data, key, value) {\n  let dep = new Dep(); // 这个dep 是为了给对象使用的\n  // 这里这个value可能是数组 也可能是对象 ，返回的结果是observer的实例，当前这个value对应的observer\n  let childOb = observe(value); // 数组的observer实例\n  Object.defineProperty(data, key, {\n    configurable: true,\n    enumerable: true,\n    get() { //  获取值的时候做一些操作\n      // 每个属性都对应着自己的watcher\n      if (Dep.target) { // 如果当前有watcher\n        dep.depend(); // 意味着我要将watcher存起来\n        if (childOb) { // *******数组的依赖收集*****\n          childOb.dep.depend(); // 收集了数组的相关依赖\n\n          // 如果数组中还有数组\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n\n        }\n      }\n      return value;\n    },\n    set(newValue) { // 也可以做一些操作\n      // console.log('更新数据')\n      if (newValue === value) return;\n      observe(newValue); // 继续劫持用户设置的值，因为有可能用户设置的值是一个对象\n      value = newValue;\n      dep.notify(); // 通知依赖的watcher来进行一个更新操作\n    }\n  });\n}\n\nfunction dependArray(value) {\n  for (let i = 0; i < value.length; i++) {\n    let current = value[i]; // 将数组中的每一个都取出来，数据变化后 也去更新视图\n    // 数组中的数组的依赖收集\n    current.__ob__ && current.__ob__.dep.depend();\n    if (Array.isArray(current)) {\n      dependArray(current);\n    }\n  }\n}\n\nexport function observe(data) {\n  let isObj = isObject(data);\n  if (!isObj) {\n    return\n  }\n  return new Observer(data); // 用来观测数据\n}\n","import {\n  observe\n} from './observer/index.js'\nimport {\n  proxy\n} from './util/index'\n\nexport function initState(vm) {\n  const opts = vm.$options;\n  // vue的数据来源 属性 方法 数据 计算属性 watch\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethod(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initProps() {\n}\n\nfunction initMethod() {\n}\n\nfunction initData(vm) {\n  // 数据初始化工作\n  let data = vm.$options.data; // 用户传递的data\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data;\n  // 对象劫持 用户改变了数据 我希望可以得到通知 =》 刷新页面\n  // MVVM模式 数据变化可以驱动视图变化\n  // Object.defineProperty () 给属性增加get方法和set方法\n\n  // 为了让用户更好的使用 我希望可以直接vm.xxx\n  for (let key in data) {\n    proxy(vm, '_data', key);\n  }\n  observe(data); // 响应式原理\n}\n\nfunction initComputed() {\n}\n\nfunction initWatch() {\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nexport function parseHTML(html) {\n\n  let root = null; // ast语法树的树根\n  let currentParent; // 标识当前父亲是谁\n  let stack = [];\n  const ELEMENT_TYPE = 1;\n  const TEXT_TYPE = 3;\n\n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      type: ELEMENT_TYPE,\n      children: [],\n      attrs,\n      parent: null\n    }\n  }\n\n  function start(tagName, attrs) {\n    // 遇到开始标签 就创建一个ast元素s\n    let element = createASTElement(tagName, attrs);\n    if (!root) {\n      root = element;\n    }\n    currentParent = element; // 把当前元素标记成父ast树\n    stack.push(element); // 将开始标签存放到栈中\n  }\n\n  function chars(text) {\n    text = text.replace(/\\s/g, '');\n    if (text) {\n      currentParent.children.push({\n        text,\n        type: TEXT_TYPE\n      })\n    }\n  }\n\n  function end(tagName) {\n    let element = stack.pop(); // 拿到的是ast对象\n    // 我要标识当前这个p是属于这个div的儿子的\n    currentParent = stack[stack.length - 1];\n    if (currentParent) {\n      element.parent = currentParent;\n      currentParent.children.push(element); // 实现了一个树的父子关系\n    }\n  }\n\n  // 不停的去解析html字符串\n  while (html) {\n    let textEnd = html.indexOf('<');\n    if (textEnd == 0) {\n      // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n      let startTagMatch = parseStartTag(); // 通过这个方法获取到匹配的结果 tagName,attrs\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs); // 1解析开始标签\n        continue; // 如果开始标签匹配完毕后 继续下一次 匹配\n      }\n      let endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]); // 2解析结束标签\n        continue;\n      }\n    }\n    let text;\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      advance(text.length);\n      chars(text); // 3解析文本\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n);\n  }\n\n  function parseStartTag() {\n    let start = html.match(startTagOpen);\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length); // 将标签删除\n      let end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        // 将属性进行解析\n        advance(attr[0].length); // 将属性去掉\n        match.attrs.push({\n          name: attr[1],\n          value: attr[3] || attr[4] || attr[5]\n        });\n      }\n      if (end) { // 去掉开始标签的 >\n        advance(end[0].length);\n        return match\n      }\n    }\n  }\n\n  return root;\n}\n","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps(attrs) { // 处理属性 拼接成属性的字符串\n  let str = '';\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n    if (attr.name === 'style') {\n      // style=\"color: red;fontSize:14px\" => {style:{color:'red'},id:name,}\n      let obj = {};\n      attr.value.split(';').forEach(item => {\n        let [key, value] = item.split(':');\n        obj[key] = value\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\n\nfunction genChildren(el) {\n  let children = el.children;\n  if (children && children.length > 0) {\n    return `${children.map(c => gen(c)).join(',')}`\n  } else {\n    return false;\n  }\n}\n\nfunction gen(node) {\n  if (node.type == 1) {\n    // 元素标签\n    return generate(node);\n  } else {\n    let text = node.text; //   <div>a {{  name  }} b{{age}} c</div>\n    let tokens = [];\n    let match, index;\n    // 每次的偏移量 buffer.split()\n    let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index;\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    return `_v(${tokens.join('+')})`;\n  }\n}\n\nexport function generate(el) { // [{name:'id',value:'app'},{}]  {id:app,a:1,b:2}\n  let children = genChildren(el);\n  let code = `_c(\"${el.tag}\",${\n    el.attrs.length ? genProps(el.attrs) : 'undefined'\n  }${\n    children ? `,${children}` : ''\n  })\n    `\n  return code;\n}\n","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?: 匹配不捕获\n// argumens[0] = 匹配到的标签  arguments[1] 匹配到的标签名字\nimport {parseHTML} from './parser-html';\nimport {generate} from './generate';\n\nexport function compileToFunction(template) {\n  // 1) 解析html字符串 将html字符串 => ast语法树\n  let root = parseHTML(template);\n  // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n  let code = generate(root);\n  // 核心思路就是将模板转化成 下面这段字符串\n  //  <div id=\"app\"><p>hello {{name}}</p> hello</div>\n  // 将ast树 再次转化成js的语法\n  //  _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n  // 所有的模板引擎实现 都需要new Function + with\n  let renderFn = new Function(`with(this){ return ${code}}`);\n\n\n  // vue的render 他返回的是虚拟dom\n  return renderFn;\n}\n\n\n//   hellpo\n//      <p></p>\n// </div>\n\n\n// let root = {\n//     tag:'div',\n//     attrs:[{name:'id',value:'app'}],\n//     parent:null,\n//     type:1,\n//     children:[{\n//         tag:'p',\n//         attrs:[],\n//         parent:root,\n//         type:1,\n//         children:[\n//             {\n//                 text:'hello',\n//                 type:3\n//             }\n//         ]\n//     }]\n// }\n","let callbacks = []\n// [flushSchedularQueue,userNextTick]\nlet waiting = false;\n\nfunction flushCallback() {\n  callbacks.forEach(cb => cb());\n  waiting = false;\n  callbacks = [];\n}\n\nexport function nextTick(cb) {\n  // 多次调用nextTick 如果没有刷新的时候 就先把他放到数组中,\n  // 刷新后 更改waiting\n  callbacks.push(cb);\n  if (waiting === false) {\n    setTimeout(flushCallback, 0);\n    waiting = true;\n  }\n}\n\n// 这个地方 非常的（饶） 只能自己加一些你自己的理解\n// 不要过度的理解\n","let queue = [];\nlet has = {};\nimport {nextTick} from '../util/next-tick';\n\nfunction flushSchedularQueue(){\n    queue.forEach(watcher=>watcher.run());\n    queue = [] ; // 让下一次可以继续使用\n    has = {};\n}\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    if (has[id] == null) {\n        queue.push(watcher);\n        has[id] = true;\n\n        // 宏任务和微任务 （vue里面使用Vue.nextTick）\n        // Vue.nextTick = promise / mutationObserver / setImmediate/ setTimeout\n        nextTick(flushSchedularQueue)\n    }\n}\n","import {\n  pushTarget,\n  popTarget\n} from './dep.js';\n\nimport {queueWatcher} from './schedular'\n\nlet id = 0;\n\nclass Watcher {\n  constructor(vm, exprOrFn, callback, options) {\n    this.vm = vm;\n    this.callback = callback;\n    this.options = options;\n    this.id = id++;\n    this.getter = exprOrFn; // 将内部传过来的回调函数 放到getter属性上\n    this.depsId = new Set(); // es6中的集合 （不能放重复项）\n    this.deps = [];\n    this.get(); // 调用get方法 会让渲染watcher执行\n  }\n\n  addDep(dep) { // watcher 里不能放重复的dep  dep里不能放重复的watcher\n    let id = dep.id;\n    if (!this.depsId.has(id)) {\n      this.depsId.add(id);\n      this.deps.push(dep);\n      dep.addSub(this);\n    }\n  }\n\n  get() {\n    pushTarget(this); // 把watcher存起来  Dep.target = this\n    this.getter(); // 渲染watcher的执行\n    popTarget(); // 移除watcher\n  }\n\n  update() {\n    queueWatcher(this);\n    // console.log(this.id)\n    // 等待着 一起来更新 因为每次调用update的时候 都放入了watcher\n    // this.get();\n  }\n\n  run() {\n    this.get();\n  }\n}\n\n// 下次课 会带大家看一次vue的源代码\n\n// 在模板中取值时 会进行依赖收集 在更改数据是会进行对应的watcher 调用更新操作\n// dep 和 watcher 是一个多对多的关系  dep里存放着相关的watcher 是一个观察者模式\nexport default Watcher\n","export function patch(oldVnode, vnode) {\n  // 1.判断是更新还是要渲染\n  if (!oldVnode) {\n    // 通过当前的虚拟节点 创建元素并返回\n    return createElm(vnode);\n  } else {\n    const isRealElement = oldVnode.nodeType;\n    if (isRealElement) {\n      const oldElm = oldVnode; // div id=\"app\"\n      const parentElm = oldElm.parentNode; // body\n\n      let el = createElm(vnode);\n      parentElm.insertBefore(el, oldElm.nextSibling)\n      parentElm.removeChild(oldElm);\n\n      // 需要将渲染好的结果返回\n      return el;\n    } else {\n      // 1. 标签不一致直接替换即可\n      if (oldVnode.tag !== vnode.tag) {\n        // 标签不一致\n        oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el)\n      }\n      // console.log(oldVnode, vnode)\n      // 比对两个虚拟节点 操作真是的dom\n\n      // 2.如果文本呢？文本没有tag\n      if (!oldVnode.tag) { // 这个就是文本的情况 如果内容不一致 直接替换掉问吧\n        if (oldVnode.text !== vnode.text) {\n          oldVnode.el.textContent = vnode.text\n        }\n      }\n\n      // 3. 说明标签一致而且不是文本了(比对属性是否一致)\n      let el = vnode.el = oldVnode.el\n      updateProperties(vnode, oldVnode.data)\n\n      // 我需要比对儿子\n      let oldChildren = oldVnode.children || []\n      let newChildren = vnode.children || []\n      if (oldChildren.length > 0 && newChildren.length > 0) {\n        // 新老都有儿子 需要比对里面的儿子\n        updateChildren(el, oldChildren, newChildren)\n      } else if (newChildren.length > 0) {\n        // 新的有孩子 老的没孩子 直接将孩子虚拟节点转换成真实节点 插入即可\n        for (let i = 0; i < newChildren.length; i++) {\n          let child = newChildren[i]\n          el.appendChild(createElm(child))\n        }\n      } else if (oldChildren.length > 0) {\n        // 老的有孩子 新的没孩子\n        el.innerHTML = ''\n      }\n    }\n  }\n  // 递归创建真实节点 替换掉老的节点\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n  return (oldVnode.tag === newVnode.tag) && (oldVnode.key === newVnode.key)\n}\n\nfunction updateChildren(parent, oldChildren, newChildren) {\n  // vue采用的是双指针的方式\n\n  // vue在内部比对的过程中做了很多优化策略\n  let oldStartIndex = 0;\n  let oldStartVnode = oldChildren[0];\n  let oldEndIndex = oldChildren.length - 1;\n  let oldEndVnode = oldChildren[oldEndIndex]\n\n  let newStartIndex = 0;\n  let newStartVnode = newChildren[0];\n  let newEndIndex = newChildren.length - 1;\n  let newEndVnode = newChildren[newEndIndex];\n\n  const makeIndexByKey = (children) => {\n    let map = {}\n    children.forEach((item, index) => {\n      if (item.key) {\n        map[item.key] = index // 根据key 创建一个映射表\n      }\n    })\n    return map\n  }\n  let map = makeIndexByKey(oldChildren)\n\n  // 在比对的过程中 新老虚拟节点有一方循环完毕就结束\n  while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n    if (!oldStartVnode) { // 在老指针移动过程中 可能会遇到undefined\n      oldStartVnode = oldChildren[++oldStartIndex]\n    } else if (!oldEndVnode) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      // 如果是同一个节点 就需要比对这个元素的属性\n      patch(oldStartVnode, newStartVnode); // 比对开头节点\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newStartVnode = newChildren[++newStartIndex];\n      // 优化向前插入的情况\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newEndVnode = newChildren[--newEndIndex]\n    }\n    // 头移尾  (涉及到 倒叙变成正序)\n    else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      patch(oldStartVnode, newEndVnode);\n      parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n      oldStartVnode = oldChildren[++oldStartIndex];\n      newEndVnode = newChildren[--newEndIndex]\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      patch(oldEndVnode, newStartVnode);\n      parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\n      oldEndVnode = oldChildren[--oldEndIndex];\n      newStartVnode = newChildren[++newStartIndex];\n    } else {\n      // 暴力比对 乱序\n      // 查找规则先取出新的第一个虚拟节点 通过key来查找是否存在\n      // 先根据老节点的key 做一个映射表 拿新的虚拟节点去映射表查找 如果可以找到 则进行移动操作（移动头指针前面位置） 如果找不到直接将元素插入即可\n      let moveIndex = map[newStartVnode.key]\n      if (!moveIndex) { // 不需要服用\n        parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n      } else {\n        // 如果在映射表中查找到了，则直接将元素移走，并且将当前位置值为空\n        let moveVnode = oldChildren[moveIndex] // 我要移动的那个元素\n        oldChildren[moveIndex] = undefined // 占位防止塌陷\n        parent.insertBefore(moveVnode.el, oldStartVnode.el)\n        patch(moveVnode, newStartVnode)\n      }\n      newStartVnode = newChildren[++newStartIndex]\n    }\n  }\n\n  if (newStartIndex <= newEndIndex) {\n    for (let i = newStartIndex; i <= newEndIndex; i++) {\n      let el = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\n      parent.insertBefore(createElm(newChildren[i]), el); // 写null 就等价于appendChild\n      // 将新增的元素直接进行插入  (可能是像后插入 也有可能从头插入)  insertBefore\n    }\n  }\n  if (oldStartIndex <= oldEndIndex) {\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n      let child = oldChildren[i]\n      if (child !== undefined) {\n        parent.removeChild(child.el)\n      }\n    }\n  }\n}\n\nfunction createComponent(vnode) { // 初始化的作用\n                                  // 需要创建组件的实例\n  let i = vnode.data;\n  if ((i = i.hook) && (i = i.init)) {\n    i(vnode);\n  }\n\n  // 执行完毕后\n  if (vnode.componentInstance) {\n    return true;\n  }\n}\n\nexport function createElm(vnode) { // 根据虚拟节点创建真实的节点\n  let {\n    tag,\n    children,\n    key,\n    data,\n    text\n  } = vnode;\n  // 是标签就创建标签\n  if (typeof tag === 'string') {\n    // 不是tag是字符串的就是普通的html  还有可能是我们的组件\n\n    // 实例化组件\n    if (createComponent(vnode)) { // 表示是组件\n      // 这里应该返回的是真实的dom元素\n      return vnode.componentInstance.$el;\n    }\n\n    vnode.el = document.createElement(tag);\n    updateProperties(vnode);\n    children.forEach(child => { // 递归创建儿子节点，将儿子节点扔到父节点中\n      return vnode.el.appendChild(createElm(child))\n    })\n  } else {\n    // 虚拟dom上映射着真实dom  方便后续更新操作\n    vnode.el = document.createTextNode(text)\n  }\n  // 如果不是标签就是文本\n  return vnode.el;\n}\n\n// 更新属性\nfunction updateProperties(vnode, oldProps = {}) {\n  let newProps = vnode.data || {};\n  let el = vnode.el;\n  // 如果老的属性中有 新的属性没有 在真实dom上将这个属性删除掉\n  let newStyle = newProps.style || {}\n  let oldStyle = oldProps.style || {}\n  // mergeOptions\n  for (let key in oldStyle) {\n    if (!newStyle[key]) {\n      el.style[[key]] = '' // 删除多余\n    }\n  }\n  for (let key in oldProps) {\n    if (!newProps[key]) {\n      el.removeAttribute(key)\n    }\n  }\n  for (let key in newProps) { // 以新的为准\n    if (key === 'style') {\n      for (let styleName in newProps.style) {\n        // 新增样式\n        el.style[styleName] = newProps.style[styleName];\n      }\n    } else if (key === 'class') {\n      el.className = newProps.class;\n    } else {\n      el.setAttribute(key, newProps[key]);\n    }\n  }\n}\n","import Watcher from './observer/watcher';\nimport {patch} from './vdom/patch'\n\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    vm.$el = patch(vm.$el, vnode); // 需要用虚拟节点创建出真实节点 替换掉 真实的$el\n\n    // 我要通过虚拟节点 渲染出真实的dom\n  }\n}\n\nexport function mountComponent(vm, el) {\n  const options = vm.$options; // render\n  vm.$el = el; // 真实的dom元素\n\n  // Watcher 就是用来渲染的\n  // vm._render 通过解析的render方法 渲染出虚拟dom _c _v _s\n  // vm._update 通过虚拟dom 创建真实的dom\n  callHook(vm, 'beforeMount');\n  // 渲染页面\n  let updateComponent = () => { // 无论是渲染还是更新都会调用此方法\n    // 返回的是虚拟dom\n    vm._update(vm._render());\n  }\n  // 渲染watcher 每个组件都有一个watcher\n  new Watcher(vm, updateComponent, () => {\n  }, true); // true表示他是一个渲染watcher\n  callHook(vm, 'mounted');\n}\n\nexport function callHook(vm, hook) {\n  const handlers = vm.$options[hook]; // [fn,fn,fn]\n  if (handlers) { // 找到对应的钩子依次执行\n    for (let i = 0; i < handlers.length; i++) {\n      handlers[i].call(vm);\n    }\n  }\n}\n","import {initState} from './state'\nimport {compileToFunction} from './compiler/index.js'\nimport {mountComponent, callHook} from './lifecycle'\nimport {mergeOptions} from './util/index';\nimport {nextTick} from './util/next-tick'\n\n// 在原型上添加一个init方法\nexport function initMixin(Vue) {\n  // 初始化流程\n  Vue.prototype._init = function (options) {\n    // 数据的劫持\n    const vm = this; // vue中使用 this.$options 指代的就是用户传递的属性\n\n    // 将用户传递的 和 全局的进行一个合并\n    vm.$options = mergeOptions(vm.constructor.options, options);\n\n    callHook(vm, 'beforeCreate')\n\n    // 初始化状态\n    initState(vm); // 分割代码\n\n    callHook(vm, 'created');\n    // 如果用户传入了el属性 需要将页面渲染出来\n    // 如果用户传入了el 就要实现挂载流程\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  }\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n\n    // 默认先会查找有没有render方法，没有render 会 采用template template也没有就用el中的内容\n    if (!options.render) {\n      // 对模板进行编译\n      let template = options.template; // 取出模板\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      const render = compileToFunction(template);\n      options.render = render;\n      // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom\n    }\n    // options.render\n\n    // 渲染当前的组件 挂载这个组件\n    mountComponent(vm, el);\n  }\n  // 用户调用的nextTick\n  Vue.prototype.$nextTick = nextTick; // 注册了nextTick\n}\n","import {isObject, isReservedTag} from \"../util/index\";\n\nexport function createElement(vm, tag, data = {}, ...children) {\n  // ast -> render -> 调用\n  let key = data.key;\n  if (key) {\n    delete data.key;\n  }\n  // // 以前表示的是标签  现在是组件  名字  上下文\n  if (isReservedTag(tag)) {\n    return vnode(tag, data, key, children, undefined);\n  } else {\n    // 组件  找到组件的定义\n    let Ctor = vm.$options.components[tag];\n\n    return createComponent(vm, tag, data, key, children, Ctor)\n  }\n}\n\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n  if (isObject(Ctor)) {\n    Ctor = vm.$options._base.extend(Ctor);\n  }\n  data.hook = {\n    init(vnode) {\n      // 当前组件的实例 就是componentInstance\n      let child = vnode.componentInstance = new Ctor({_isComponent: true});\n      // 组件的挂载 vm.$el\n      child.$mount(); // vnode.componentInstance.$el\n    }\n  }\n\n  // $vnode = 当前这个组件的 vnode   占位符vnode\n  return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, {Ctor, children})\n}\n\nexport function createTextNode(vm, text) {\n  return vnode(undefined, undefined, undefined, undefined, text);\n}\n\nfunction vnode(tag, data, key, children, text, componentOptions) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text,\n    componentOptions\n  }\n}\n\n// 虚拟节点 就是通过_c _v 实现用对象来描述dom的操作 （对象）\n\n// 1) 将template转换成ast语法树-> 生成render方法 -> 生成虚拟dom -> 真实的dom\n//  重新生成虚拟dom -> 更新dom\n\n","import {\n  createElement,\n  createTextNode\n} from './vdom/create-element'\n\nexport function renderMixin(Vue) {\n  // _c 创建元素的虚拟节点\n  // _v 创建文本的虚拟节点\n  // _s JSON.stringify\n\n  Vue.prototype._c = function () {\n    return createElement(this, ...arguments); // tag,data,children1,children2\n  }\n  Vue.prototype._v = function (text) {\n    return createTextNode(this, text);\n  }\n  Vue.prototype._s = function (val) {\n    return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val);\n  }\n  Vue.prototype._render = function () {\n    const vm = this;\n    const {\n      render\n    } = vm.$options;\n    let vnode = render.call(vm); // 去实例上 取值\n\n    return vnode;\n  }\n}\n","export default function initMixin(Vue) {\n  Vue.mixin = function (mixin) {\n    // 如何实现两个对象的合并\n    this.options = mergeOptions(this.options, mixin)\n  }\n  // 生命周期的合并策略  [beforeCreate]\n}\n","export const ASSETS_TYPE = [\n    'component',\n    'directive',\n    'filter'\n]","import {ASSETS_TYPE} from './const'\n\nexport default function initAssetRegisters(Vue){\n    ASSETS_TYPE.forEach(type=>{ // \n        Vue[type] = function (id,definition) {\n            if(type === 'component'){\n                // 注册全局组件\n                // 使用extend 方法 将对象变成构造函数\n                // 子组件可能也有这个VueComponent.component方法\n                definition = Vue.extend(definition);\n            }else if(type === 'filter'){\n\n\n            }else if(type === 'directive'){\n\n\n            }\n            this.options[type+'s'][id] = definition\n        }\n    })\n}","import {mergeOptions} from '../util/index'\n\nexport default function initExtend(Vue) {\n  // 为什么要有子类和父类  new Vue  （Vue的构造函数）  ._init()\n  // 创建子类  继承于父类 扩展的时候都扩展到自己的属性上\n  let cid = 0\n  Vue.extend = function (extendOptions) {\n    const Sub = function VueComponent(options) {\n      this._init(options)\n    }\n    Sub.cid = cid++;\n    Sub.prototype = Object.create(this.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.options = mergeOptions(\n      this.options,\n      extendOptions\n    )\n    // mixin\n    // use\n    // ...\n    return Sub;\n  }\n}\n","import {mergeOptions} from '../util/index'\nimport initMixin from './mixin';\nimport initAssetRegisters from './assets.js'\nimport initExtend from './extend'\nimport {ASSETS_TYPE} from './const'\n\nexport function initGlobalAPI(Vue) {\n  // 整合了所有的全局相关的内容\n  Vue.options = {}\n  initMixin(Vue)\n\n  // 初始化的全局过滤器 指令  组件\n\n  ASSETS_TYPE.forEach(type => {\n    Vue.options[type + 's'] = {}\n  });\n  Vue.options._base = Vue; // _base 是Vue的构造函数\n\n  // 注册extend方法\n  initExtend(Vue)\n  initAssetRegisters(Vue)\n}\n","// Vue的核心代码 只是Vue的一个声明\nimport {initMixin} from './init';\nimport {renderMixin} from './render';\nimport {lifecycleMixin} from './lifecycle';\nimport {initGlobalAPI} from './initGlobalAPI/index'\n\nfunction Vue(options) {\n  // 进行Vue的初始化操作\n  this._init(options);\n\n}\n\n// 通过引入文件的方式 给Vue原型上添加方法\n\ninitMixin(Vue); // 给Vue原型上添加一个_init方法\nrenderMixin(Vue);\nlifecycleMixin(Vue);\n\n// 初始化全集的api\ninitGlobalAPI(Vue)\n\n// demo 产生两个虚拟节点进行比对\n// template => render方法 => vnode\nimport {compileToFunction} from \"./compiler/index\";\nimport {createElm, patch} from \"./vdom/patch\"\n\nlet vm1 = new Vue({\n  data: {name: 'hello'}\n})\nlet render1 = compileToFunction(`<div id=\"app\" a=\"1\" style=\"background: red;\">\n  <div style=\"background: red\" key=\"A\">A</div>\n  <div style=\"background: yellow\" key=\"B\">B</div>\n  <div style=\"background: grey\" key=\"C\">C</div>\n</div>`)\nlet vnode = render1.call(vm1)\n\nlet el = createElm(vnode)\ndocument.body.appendChild(el)\n\nlet vm2 = new Vue({\n  data: {name: 'zf', age: 11}\n})\nlet render2 = compileToFunction(`<div id=\"aaa\" a=\"2\" style=\"color: blue;\">\n  <div style=\"background: red\" key=\"Q\">Q</div>\n  <div style=\"background: red\" key=\"A\">A</div>\n  <div style=\"background: yellow\" key=\"F\">F</div>\n  <div style=\"background: grey\" key=\"C\">C</div>\n  <div style=\"background: grey\" key=\"N\">N</div>\n</div>`)\nlet vnode2 = render2.call(vm2)\n\nsetTimeout(() => {\n  patch(vnode, vnode2) // 传入两个虚拟节点 会在内部进行比对\n}, 1000)\n\n// 1. diff算法特点是 平级比较 我们正常操作dom元素 很少涉及到父变成子 子变成父 O(n³)\n\nexport default Vue\n"],"names":["oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","_len","arguments","length","args","_key","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","isObject","data","_typeof","def","key","value","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","hook","mergeAssets","res","components","mergeOptions","parent","child","options","mergeField","hasOwnProperty","_objectSpread","isReservedTag","tagName","str","obj","split","tag","id","Dep","_classCallCheck","subs","_createClass","addSub","watcher","push","depend","target","addDep","update","stack","pushTarget","popTarget","pop","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","dependArray","current","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","_loop","item","_item$split","_item$split2","_slicedToArray","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","patch","oldVnode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","textContent","updateProperties","oldChildren","newChildren","updateChildren","appendChild","innerHTML","isSameVnode","newVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","moveIndex","moveVnode","undefined","createComponent","init","componentInstance","$el","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","className","setAttribute","lifecycleMixin","Vue","_update","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","Ctor","_base","extend","_isComponent","cid","componentOptions","renderMixin","_c","_v","_s","val","mixin","ASSETS_TYPE","initAssetRegisters","definition","initExtend","extendOptions","Sub","VueComponent","initGlobalAPI","vm1","render1","body","vm2","age","render2","vnode2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;;EAEA,IAAIA,eAAe,GAAGC,KAAK,CAACC,SAAS,CAAA;EACrC;EACA;EACO,IAAMC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACL,eAAe,CAAC,CAAA;EAE1D,IAAMM,OAAO,GAAG,CACd,MAAM,EACN,OAAO,EACP,SAAS,EACT,KAAK,EACL,MAAM,EACN,QAAQ,EACR,SAAS,CACV,CAAA;EACDA,OAAO,CAACC,OAAO,CAAC,UAAAC,MAAM,EAAI;EACxBL,EAAAA,YAAY,CAACK,MAAM,CAAC,GAAG,YAAmB;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,GAAAX,IAAAA,KAAA,CAAAQ,IAAA,GAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAH,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,KAAA;EACtC,IAAA,IAAMC,MAAM,GAAGd,eAAe,CAACQ,MAAM,CAAC,CAACO,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAC;EACzD;MACA,IAAII,QAAQ,CAAC;EACb,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,QAAQV,MAAM;EACZ,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACZQ,QAAAA,QAAQ,GAAGJ,IAAI,CAAA;EACf,QAAA,MAAA;EACF,MAAA,KAAK,QAAQ;EAAE;EACbI,QAAAA,QAAQ,GAAGJ,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,CAAA;EAElB,KAAA;MAEV,IAAIH,QAAQ,EAAEC,EAAE,CAACG,aAAa,CAACJ,QAAQ,CAAC,CAAC;;EAEzCC,IAAAA,EAAE,CAACI,GAAG,CAACC,MAAM,EAAE,CAAC;EAChB,IAAA,OAAOR,MAAM,CAAA;KACd,CAAA;EACH,CAAC,CAAC;;ECtCF;EACA;EACA;EACA;EACO,SAASS,QAAQA,CAACC,IAAI,EAAE;IAC7B,OAAOC,OAAA,CAAOD,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,KAAK,IAAI,CAAA;EAClD,CAAA;EAEO,SAASE,GAAGA,CAACF,IAAI,EAAEG,GAAG,EAAEC,KAAK,EAAE;EACpCxB,EAAAA,MAAM,CAACyB,cAAc,CAACL,IAAI,EAAEG,GAAG,EAAE;EAC/BG,IAAAA,UAAU,EAAE,KAAK;EACjBC,IAAAA,YAAY,EAAE,KAAK;EACnBH,IAAAA,KAAK,EAALA,KAAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;;EAEA;EACO,SAASI,KAAKA,CAACC,EAAE,EAAEC,MAAM,EAAEP,GAAG,EAAE;EACrCvB,EAAAA,MAAM,CAACyB,cAAc,CAACI,EAAE,EAAEN,GAAG,EAAE;MAC7BQ,GAAG,EAAA,SAAAA,MAAG;EACJ,MAAA,OAAOF,EAAE,CAACC,MAAM,CAAC,CAACP,GAAG,CAAC,CAAA;OACvB;MACDS,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACZJ,MAAAA,EAAE,CAACC,MAAM,CAAC,CAACP,GAAG,CAAC,GAAGU,QAAQ,CAAA;EAC5B,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EAEA,IAAMC,eAAe,GAAG,CACtB,cAAc,EACd,SAAS,EACT,aAAa,EACb,SAAS,EACT,cAAc,EACd,SAAS,EACT,eAAe,EACf,WAAW,CACZ,CAAA;EAED,IAAIC,MAAM,GAAG,EAAE,CAAA;EAEf,SAASC,SAASA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACtC,EAAA,IAAIA,QAAQ,EAAE;EACZ,IAAA,IAAID,SAAS,EAAE;EACb,MAAA,OAAOA,SAAS,CAACE,MAAM,CAACD,QAAQ,CAAC,CAAA;EACnC,KAAC,MAAM;QACL,OAAO,CAACA,QAAQ,CAAC,CAAA;EACnB,KAAA;EACF,GAAC,MAAM;EACL,IAAA,OAAOD,SAAS,CAAA;EAClB,GAAA;EACF,CAAA;EAEAH,eAAe,CAAC/B,OAAO,CAAC,UAAAqC,IAAI,EAAI;EAC9BL,EAAAA,MAAM,CAACK,IAAI,CAAC,GAAGJ,SAAS,CAAA;EAC1B,CAAC,CAAC,CAAA;EAEF,SAASK,WAAWA,CAACJ,SAAS,EAAEC,QAAQ,EAAE;IACxC,IAAMI,GAAG,GAAG1C,MAAM,CAACC,MAAM,CAACoC,SAAS,CAAC,CAAC;EACrC,EAAA,IAAIC,QAAQ,EAAE;EACZ,IAAA,KAAK,IAAIf,GAAG,IAAIe,QAAQ,EAAE;EACxBI,MAAAA,GAAG,CAACnB,GAAG,CAAC,GAAGe,QAAQ,CAACf,GAAG,CAAC,CAAA;EAC1B,KAAA;EACF,GAAA;EACA,EAAA,OAAOmB,GAAG,CAAA;EACZ,CAAA;EAEAP,MAAM,CAACQ,UAAU,GAAGF,WAAW,CAAA;EAExB,SAASG,cAAYA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAC1C,IAAMC,OAAO,GAAG,EAAE,CAAA;EAClB,EAAA,KAAK,IAAIxB,GAAG,IAAIsB,MAAM,EAAE;MACtBG,UAAU,CAACzB,GAAG,CAAC,CAAA;EACjB,GAAA;EACA,EAAA,KAAK,IAAIA,IAAG,IAAIuB,KAAK,EAAE;EAAE;EACvB,IAAA,IAAI,CAACD,MAAM,CAACI,cAAc,CAAC1B,IAAG,CAAC,EAAE;QAC/ByB,UAAU,CAACzB,IAAG,CAAC,CAAA;EACjB,KAAA;EACF,GAAA;;EAEA;IACA,SAASyB,UAAUA,CAACzB,GAAG,EAAE;EACvB,IAAA,IAAIY,MAAM,CAACZ,GAAG,CAAC,EAAE;EACf,MAAA,OAAOwB,OAAO,CAACxB,GAAG,CAAC,GAAGY,MAAM,CAACZ,GAAG,CAAC,CAACsB,MAAM,CAACtB,GAAG,CAAC,EAAEuB,KAAK,CAACvB,GAAG,CAAC,CAAC,CAAA;EAC5D,KAAA;EACA,IAAA,IAAIF,OAAA,CAAOwB,MAAM,CAACtB,GAAG,CAAC,CAAK,KAAA,QAAQ,IAAIF,OAAA,CAAOyB,KAAK,CAACvB,GAAG,CAAC,CAAA,KAAK,QAAQ,EAAE;EACrEwB,MAAAA,OAAO,CAACxB,GAAG,CAAC,GAAA2B,cAAA,CAAAA,cAAA,CAAA,EAAA,EACPL,MAAM,CAACtB,GAAG,CAAC,CAAA,EACXuB,KAAK,CAACvB,GAAG,CAAC,CACd,CAAA;OACF,MAAM,IAAIuB,KAAK,CAACvB,GAAG,CAAC,IAAI,IAAI,EAAE;EAC7BwB,MAAAA,OAAO,CAACxB,GAAG,CAAC,GAAGsB,MAAM,CAACtB,GAAG,CAAC,CAAA;EAC5B,KAAC,MAAM;EACLwB,MAAAA,OAAO,CAACxB,GAAG,CAAC,GAAGuB,KAAK,CAACvB,GAAG,CAAC,CAAA;EAC3B,KAAA;EACF,GAAA;EAEA,EAAA,OAAOwB,OAAO,CAAA;EAChB,CAAA;EAGO,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,OAAO,EAAK;IAExC,IAAIC,GAAG,GAAG,yBAAyB,CAAA;IACnC,IAAIC,GAAG,GAAG,EAAE,CAAA;IACZD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAACpD,OAAO,CAAC,UAAAqD,GAAG,EAAI;EAC5BF,IAAAA,GAAG,CAACE,GAAG,CAAC,GAAG,IAAI,CAAA;EACjB,GAAC,CAAC,CAAA;IAEF,OAAOF,GAAG,CAACF,OAAO,CAAC,CAAA;EAErB,CAAC;;EC/GD,IAAIK,IAAE,GAAG,CAAC,CAAA;EAAC,IAELC,GAAG,gBAAA,YAAA;EACP,EAAA,SAAAA,MAAc;EAAAC,IAAAA,eAAA,OAAAD,GAAA,CAAA,CAAA;EACZ,IAAA,IAAI,CAACD,EAAE,GAAGA,IAAE,EAAE,CAAA;MACd,IAAI,CAACG,IAAI,GAAG,EAAE,CAAA;EAChB,GAAA;EAACC,EAAAA,YAAA,CAAAH,GAAA,EAAA,CAAA;MAAAnC,GAAA,EAAA,QAAA;EAAAC,IAAAA,KAAA,EAED,SAAAsC,MAAOC,CAAAA,OAAO,EAAE;QACd,IAAI,CAACH,IAAI,CAACI,IAAI,CAACD,OAAO,CAAC,CAAC;EAC1B,KAAA;EAAC,GAAA,EAAA;MAAAxC,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAyC,MAAAA,GAAS;EACP;EACAP,MAAAA,GAAG,CAACQ,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC,CAAA;EACzB,KAAA;EAAC,GAAA,EAAA;MAAA5C,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAAN,MAAAA,GAAS;EACP,MAAA,IAAI,CAAC0C,IAAI,CAACzD,OAAO,CAAC,UAAA4D,OAAO,EAAA;UAAA,OAAIA,OAAO,CAACK,MAAM,EAAE,CAAA;SAAC,CAAA,CAAA;EAChD,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAV,GAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAGH,IAAIW,KAAK,GAAG,EAAE,CAAA;;EAEd;EACO,SAASC,UAAUA,CAACP,OAAO,EAAE;IAClCL,GAAG,CAACQ,MAAM,GAAGH,OAAO,CAAA;EACpBM,EAAAA,KAAK,CAACL,IAAI,CAACD,OAAO,CAAC,CAAA;EACrB,CAAA;EAEO,SAASQ,SAASA,GAAG;IAC1BF,KAAK,CAACG,GAAG,EAAE,CAAA;IACXd,GAAG,CAACQ,MAAM,GAAGG,KAAK,CAACA,KAAK,CAAC9D,MAAM,GAAG,CAAC,CAAC,CAAA;EACtC;;ECzBA;EAAA,IACMkE,QAAQ,gBAAA,YAAA;IACZ,SAAAA,QAAAA,CAAYjD,KAAK,EAAE;EAAAmC,IAAAA,eAAA,OAAAc,QAAA,CAAA,CAAA;EAAG;EACpB,IAAA,IAAI,CAACxD,GAAG,GAAG,IAAIyC,GAAG,GAAC;EACnB;EACA;EACApC,IAAAA,GAAG,CAACE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;EAC1B,IAAA,IAAI3B,KAAK,CAAC6E,OAAO,CAAClD,KAAK,CAAC,EAAE;EACxB;EACA;QACAA,KAAK,CAACmD,SAAS,GAAG5E,YAAY,CAAA;EAC9B;EACA,MAAA,IAAI,CAACiB,aAAa,CAACQ,KAAK,CAAC,CAAC;EAC5B,KAAC,MAAM;EACL;EACA,MAAA,IAAI,CAACoD,IAAI,CAACpD,KAAK,CAAC,CAAC;EACnB,KAAA;EACF,GAAA;EAACqC,EAAAA,YAAA,CAAAY,QAAA,EAAA,CAAA;MAAAlD,GAAA,EAAA,eAAA;EAAAC,IAAAA,KAAA,EAED,SAAAR,aAAcQ,CAAAA,KAAK,EAAE;EAAE;EACrB,MAAA,KAAK,IAAIqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrD,KAAK,CAACjB,MAAM,EAAEsE,CAAC,EAAE,EAAE;EACrCC,QAAAA,OAAO,CAACtD,KAAK,CAACqD,CAAC,CAAC,CAAC,CAAA;EACnB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAAtD,GAAA,EAAA,MAAA;EAAAC,IAAAA,KAAA,EAED,SAAAoD,IAAKxD,CAAAA,IAAI,EAAE;QACT,IAAI2D,IAAI,GAAG/E,MAAM,CAAC+E,IAAI,CAAC3D,IAAI,CAAC,CAAC;EAC7B;EACA2D,MAAAA,IAAI,CAAC5E,OAAO,CAAC,UAACoB,GAAG,EAAK;UACpByD,cAAc,CAAC5D,IAAI,EAAEG,GAAG,EAAEH,IAAI,CAACG,GAAG,CAAC,CAAC,CAAA;EACtC,OAAC,CAAC,CAAA;EACJ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAkD,QAAA,CAAA;EAAA,CAGH,EAAA,CAAA;EACA,SAASO,cAAcA,CAAC5D,IAAI,EAAEG,GAAG,EAAEC,KAAK,EAAE;EACxC,EAAA,IAAIP,GAAG,GAAG,IAAIyC,GAAG,EAAE,CAAC;EACpB;EACA,EAAA,IAAIuB,OAAO,GAAGH,OAAO,CAACtD,KAAK,CAAC,CAAC;EAC7BxB,EAAAA,MAAM,CAACyB,cAAc,CAACL,IAAI,EAAEG,GAAG,EAAE;EAC/BI,IAAAA,YAAY,EAAE,IAAI;EAClBD,IAAAA,UAAU,EAAE,IAAI;MAChBK,GAAG,EAAA,SAAAA,MAAG;EAAE;EACN;QACA,IAAI2B,GAAG,CAACQ,MAAM,EAAE;EAAE;EAChBjD,QAAAA,GAAG,CAACgD,MAAM,EAAE,CAAC;EACb,QAAA,IAAIgB,OAAO,EAAE;EAAE;EACbA,UAAAA,OAAO,CAAChE,GAAG,CAACgD,MAAM,EAAE,CAAC;;EAErB;EACA,UAAA,IAAIpE,KAAK,CAAC6E,OAAO,CAAClD,KAAK,CAAC,EAAE;cACxB0D,WAAW,CAAC1D,KAAK,CAAC,CAAA;EACpB,WAAA;EAEF,SAAA;EACF,OAAA;EACA,MAAA,OAAOA,KAAK,CAAA;OACb;MACDQ,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EAAE;EACd;QACA,IAAIA,QAAQ,KAAKT,KAAK,EAAE,OAAA;EACxBsD,MAAAA,OAAO,CAAC7C,QAAQ,CAAC,CAAC;EAClBT,MAAAA,KAAK,GAAGS,QAAQ,CAAA;EAChBhB,MAAAA,GAAG,CAACC,MAAM,EAAE,CAAC;EACf,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;;EAEA,SAASgE,WAAWA,CAAC1D,KAAK,EAAE;EAC1B,EAAA,KAAK,IAAIqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrD,KAAK,CAACjB,MAAM,EAAEsE,CAAC,EAAE,EAAE;EACrC,IAAA,IAAIM,OAAO,GAAG3D,KAAK,CAACqD,CAAC,CAAC,CAAC;EACvB;MACAM,OAAO,CAACrE,MAAM,IAAIqE,OAAO,CAACrE,MAAM,CAACG,GAAG,CAACgD,MAAM,EAAE,CAAA;EAC7C,IAAA,IAAIpE,KAAK,CAAC6E,OAAO,CAACS,OAAO,CAAC,EAAE;QAC1BD,WAAW,CAACC,OAAO,CAAC,CAAA;EACtB,KAAA;EACF,GAAA;EACF,CAAA;EAEO,SAASL,OAAOA,CAAC1D,IAAI,EAAE;EAC5B,EAAA,IAAIgE,KAAK,GAAGjE,QAAQ,CAACC,IAAI,CAAC,CAAA;IAC1B,IAAI,CAACgE,KAAK,EAAE;EACV,IAAA,OAAA;EACF,GAAA;EACA,EAAA,OAAO,IAAIX,QAAQ,CAACrD,IAAI,CAAC,CAAC;EAC5B;;ECtFO,SAASiE,SAASA,CAACxD,EAAE,EAAE;EAC5B,EAAA,IAAMyD,IAAI,GAAGzD,EAAE,CAAC0D,QAAQ,CAAA;EACxB;IACA,IAAID,IAAI,CAACE,KAAK,EAAE,CAEhB;IACA,IAAIF,IAAI,CAACpF,OAAO,EAAE,CAElB;IACA,IAAIoF,IAAI,CAAClE,IAAI,EAAE;MACbqE,QAAQ,CAAC5D,EAAE,CAAC,CAAA;EACd,GAAA;IACA,IAAIyD,IAAI,CAACI,QAAQ,EAAE,CAEnB;IACA,IAAIJ,IAAI,CAACK,KAAK,EAAE,CAEhB;EACF,CAAA;EAQA,SAASF,QAAQA,CAAC5D,EAAE,EAAE;EACpB;IACA,IAAIT,IAAI,GAAGS,EAAE,CAAC0D,QAAQ,CAACnE,IAAI,CAAC;EAC5BA,EAAAA,IAAI,GAAGS,EAAE,CAAC+D,KAAK,GAAG,OAAOxE,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACyE,IAAI,CAAChE,EAAE,CAAC,GAAGT,IAAI,CAAA;EACnE;EACA;EACA;;EAEA;EACA,EAAA,KAAK,IAAIG,GAAG,IAAIH,IAAI,EAAE;EACpBQ,IAAAA,KAAK,CAACC,EAAE,EAAE,OAAO,EAAEN,GAAG,CAAC,CAAA;EACzB,GAAA;EACAuD,EAAAA,OAAO,CAAC1D,IAAI,CAAC,CAAC;EAChB;;EC9CA,IAAM0E,MAAM,GAAiC,8BAAA,CAAC;EAC9C,IAAMC,YAAY,GAAAxD,MAAAA,CAAAA,MAAA,CAAUuD,MAAM,EAAAvD,OAAAA,CAAAA,CAAAA,MAAA,CAAQuD,MAAM,EAAG,GAAA,CAAA,CAAC;EACpD,IAAME,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAA1D,MAAA,CAAMwD,YAAY,CAAG,CAAA,CAAC;EACrD,IAAMG,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAA1D,MAAA,CAASwD,YAAY,EAAS,QAAA,CAAA,CAAA,CAAC;EACxD,IAAMI,SAAS,GAAG,2EAA2E,CAAC;EAC9F,IAAMC,aAAa,GAAG,YAAY,CAAC;EAG5B,SAASC,SAASA,CAACC,IAAI,EAAE;EAE9B,EAAA,IAAIC,IAAI,GAAG,IAAI,CAAC;IAChB,IAAIC,aAAa,CAAC;IAClB,IAAInC,KAAK,GAAG,EAAE,CAAA;IACd,IAAMoC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;EAEnB,EAAA,SAASC,gBAAgBA,CAACvD,OAAO,EAAEwD,KAAK,EAAE;MACxC,OAAO;EACLpD,MAAAA,GAAG,EAAEJ,OAAO;EACZyD,MAAAA,IAAI,EAAEJ,YAAY;EAClBK,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACL/D,MAAAA,MAAM,EAAE,IAAA;OACT,CAAA;EACH,GAAA;EAEA,EAAA,SAASkE,KAAKA,CAAC3D,OAAO,EAAEwD,KAAK,EAAE;EAC7B;EACA,IAAA,IAAII,OAAO,GAAGL,gBAAgB,CAACvD,OAAO,EAAEwD,KAAK,CAAC,CAAA;MAC9C,IAAI,CAACL,IAAI,EAAE;EACTA,MAAAA,IAAI,GAAGS,OAAO,CAAA;EAChB,KAAA;MACAR,aAAa,GAAGQ,OAAO,CAAC;EACxB3C,IAAAA,KAAK,CAACL,IAAI,CAACgD,OAAO,CAAC,CAAC;EACtB,GAAA;;IAEA,SAASC,KAAKA,CAACC,IAAI,EAAE;MACnBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;EAC9B,IAAA,IAAID,IAAI,EAAE;EACRV,MAAAA,aAAa,CAACM,QAAQ,CAAC9C,IAAI,CAAC;EAC1BkD,QAAAA,IAAI,EAAJA,IAAI;EACJL,QAAAA,IAAI,EAAEH,SAAAA;EACR,OAAC,CAAC,CAAA;EACJ,KAAA;EACF,GAAA;IAEA,SAASU,GAAGA,CAAChE,OAAO,EAAE;EACpB,IAAA,IAAI4D,OAAO,GAAG3C,KAAK,CAACG,GAAG,EAAE,CAAC;EAC1B;MACAgC,aAAa,GAAGnC,KAAK,CAACA,KAAK,CAAC9D,MAAM,GAAG,CAAC,CAAC,CAAA;EACvC,IAAA,IAAIiG,aAAa,EAAE;QACjBQ,OAAO,CAACnE,MAAM,GAAG2D,aAAa,CAAA;QAC9BA,aAAa,CAACM,QAAQ,CAAC9C,IAAI,CAACgD,OAAO,CAAC,CAAC;EACvC,KAAA;EACF,GAAA;;EAEA;EACA,EAAA,OAAOV,IAAI,EAAE;EACX,IAAA,IAAIe,OAAO,GAAGf,IAAI,CAACgB,OAAO,CAAC,GAAG,CAAC,CAAA;MAC/B,IAAID,OAAO,IAAI,CAAC,EAAE;EAChB;EACA,MAAA,IAAIE,aAAa,GAAGC,aAAa,EAAE,CAAC;EACpC,MAAA,IAAID,aAAa,EAAE;UACjBR,KAAK,CAACQ,aAAa,CAACnE,OAAO,EAAEmE,aAAa,CAACX,KAAK,CAAC,CAAC;EAClD,QAAA,SAAS;EACX,OAAA;;EACA,MAAA,IAAIa,WAAW,GAAGnB,IAAI,CAACoB,KAAK,CAACxB,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIuB,WAAW,EAAE;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAC,CAAC,CAAClH,MAAM,CAAC,CAAA;EAC9B6G,QAAAA,GAAG,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,QAAA,SAAA;EACF,OAAA;EACF,KAAA;EACA,IAAA,IAAIP,IAAI,GAAA,KAAA,CAAA,CAAA;MACR,IAAIG,OAAO,IAAI,CAAC,EAAE;QAChBH,IAAI,GAAGZ,IAAI,CAACsB,SAAS,CAAC,CAAC,EAAEP,OAAO,CAAC,CAAA;EACnC,KAAA;EACA,IAAA,IAAIH,IAAI,EAAE;EACRS,MAAAA,OAAO,CAACT,IAAI,CAAC3G,MAAM,CAAC,CAAA;EACpB0G,MAAAA,KAAK,CAACC,IAAI,CAAC,CAAC;EACd,KAAA;EACF,GAAA;;IAEA,SAASS,OAAOA,CAACE,CAAC,EAAE;EAClBvB,IAAAA,IAAI,GAAGA,IAAI,CAACsB,SAAS,CAACC,CAAC,CAAC,CAAA;EAC1B,GAAA;IAEA,SAASL,aAAaA,GAAG;EACvB,IAAA,IAAIT,KAAK,GAAGT,IAAI,CAACoB,KAAK,CAAC1B,YAAY,CAAC,CAAA;EACpC,IAAA,IAAIe,KAAK,EAAE;EACT,MAAA,IAAMW,KAAK,GAAG;EACZtE,QAAAA,OAAO,EAAE2D,KAAK,CAAC,CAAC,CAAC;EACjBH,QAAAA,KAAK,EAAE,EAAA;SACR,CAAA;QACDe,OAAO,CAACZ,KAAK,CAAC,CAAC,CAAC,CAACxG,MAAM,CAAC,CAAC;QACzB,IAAI6G,IAAG,EAAEU,IAAI,CAAA;QACb,OAAO,EAAEV,IAAG,GAAGd,IAAI,CAACoB,KAAK,CAACtB,aAAa,CAAC,CAAC,KAAK0B,IAAI,GAAGxB,IAAI,CAACoB,KAAK,CAACvB,SAAS,CAAC,CAAC,EAAE;EAC3E;UACAwB,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC,CAACvH,MAAM,CAAC,CAAC;EACxBmH,QAAAA,KAAK,CAACd,KAAK,CAAC5C,IAAI,CAAC;EACf+D,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACbtG,UAAAA,KAAK,EAAEsG,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EACrC,SAAC,CAAC,CAAA;EACJ,OAAA;EACA,MAAA,IAAIV,IAAG,EAAE;EAAE;EACTO,QAAAA,OAAO,CAACP,IAAG,CAAC,CAAC,CAAC,CAAC7G,MAAM,CAAC,CAAA;EACtB,QAAA,OAAOmH,KAAK,CAAA;EACd,OAAA;EACF,KAAA;EACF,GAAA;EAEA,EAAA,OAAOnB,IAAI,CAAA;EACb;;EChHA,IAAMyB,YAAY,GAAG,0BAA0B,CAAA;EAE/C,SAASC,QAAQA,CAACrB,KAAK,EAAE;EAAE;IACzB,IAAIvD,GAAG,GAAG,EAAE,CAAA;IAAC,IAAA6E,KAAA,GAAAA,SAAAA,KAAAA,GAC0B;EACrC,IAAA,IAAIJ,IAAI,GAAGlB,KAAK,CAAC/B,CAAC,CAAC,CAAA;EACnB,IAAA,IAAIiD,IAAI,CAACC,IAAI,KAAK,OAAO,EAAE;EACzB;QACA,IAAIzE,GAAG,GAAG,EAAE,CAAA;EACZwE,MAAAA,IAAI,CAACtG,KAAK,CAAC+B,KAAK,CAAC,GAAG,CAAC,CAACpD,OAAO,CAAC,UAAAgI,IAAI,EAAI;EACpC,QAAA,IAAAC,WAAA,GAAmBD,IAAI,CAAC5E,KAAK,CAAC,GAAG,CAAC;YAAA8E,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA7B7G,UAAAA,GAAG,GAAA8G,YAAA,CAAA,CAAA,CAAA;EAAE7G,UAAAA,KAAK,GAAA6G,YAAA,CAAA,CAAA,CAAA,CAAA;EACf/E,QAAAA,GAAG,CAAC/B,GAAG,CAAC,GAAGC,KAAK,CAAA;EAClB,OAAC,CAAC,CAAA;QACFsG,IAAI,CAACtG,KAAK,GAAG8B,GAAG,CAAA;EAClB,KAAA;EACAD,IAAAA,GAAG,OAAAd,MAAA,CAAOuF,IAAI,CAACC,IAAI,EAAAxF,GAAAA,CAAAA,CAAAA,MAAA,CAAIgG,IAAI,CAACC,SAAS,CAACV,IAAI,CAACtG,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACrD,CAAA;EAZD,EAAA,KAAK,IAAIqD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+B,KAAK,CAACrG,MAAM,EAAEsE,CAAC,EAAE,EAAA;MAAAqD,KAAA,EAAA,CAAA;EAAA,GAAA;IAarC,OAAA3F,GAAAA,CAAAA,MAAA,CAAWc,GAAG,CAACtC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC7B,CAAA;EAEA,SAAS0H,WAAWA,CAACC,EAAE,EAAE;EACvB,EAAA,IAAI5B,QAAQ,GAAG4B,EAAE,CAAC5B,QAAQ,CAAA;EAC1B,EAAA,IAAIA,QAAQ,IAAIA,QAAQ,CAACvG,MAAM,GAAG,CAAC,EAAE;EACnC,IAAA,OAAA,EAAA,CAAAgC,MAAA,CAAUuE,QAAQ,CAAC6B,GAAG,CAAC,UAAAC,CAAC,EAAA;QAAA,OAAIC,GAAG,CAACD,CAAC,CAAC,CAAA;EAAA,KAAA,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA;EAC/C,GAAC,MAAM;EACL,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;EACF,CAAA;EAEA,SAASD,GAAGA,CAACE,IAAI,EAAE;EACjB,EAAA,IAAIA,IAAI,CAAClC,IAAI,IAAI,CAAC,EAAE;EAClB;MACA,OAAOmC,QAAQ,CAACD,IAAI,CAAC,CAAA;EACvB,GAAC,MAAM;EACL,IAAA,IAAI7B,IAAI,GAAG6B,IAAI,CAAC7B,IAAI,CAAC;MACrB,IAAI+B,MAAM,GAAG,EAAE,CAAA;MACf,IAAIvB,KAAK,EAAEwB,KAAK,CAAA;EAChB;MACA,IAAIC,SAAS,GAAGnB,YAAY,CAACmB,SAAS,GAAG,CAAC,CAAC;MAC3C,OAAOzB,KAAK,GAAGM,YAAY,CAACoB,IAAI,CAAClC,IAAI,CAAC,EAAE;QACtCgC,KAAK,GAAGxB,KAAK,CAACwB,KAAK,CAAA;QACnB,IAAIA,KAAK,GAAGC,SAAS,EAAE;EACrBF,QAAAA,MAAM,CAACjF,IAAI,CAACuE,IAAI,CAACC,SAAS,CAACtB,IAAI,CAACnG,KAAK,CAACoI,SAAS,EAAED,KAAK,CAAC,CAAC,CAAC,CAAA;EAC3D,OAAA;EACAD,MAAAA,MAAM,CAACjF,IAAI,CAAAzB,KAAAA,CAAAA,MAAA,CAAOmF,KAAK,CAAC,CAAC,CAAC,CAAC2B,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;QACrCF,SAAS,GAAGD,KAAK,GAAGxB,KAAK,CAAC,CAAC,CAAC,CAACnH,MAAM,CAAA;EACrC,KAAA;EACA,IAAA,IAAI4I,SAAS,GAAGjC,IAAI,CAAC3G,MAAM,EAAE;EAC3B0I,MAAAA,MAAM,CAACjF,IAAI,CAACuE,IAAI,CAACC,SAAS,CAACtB,IAAI,CAACnG,KAAK,CAACoI,SAAS,CAAC,CAAC,CAAC,CAAA;EACpD,KAAA;EACA,IAAA,OAAA,KAAA,CAAA5G,MAAA,CAAa0G,MAAM,CAACH,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,GAAA;EACF,CAAA;EAEO,SAASE,QAAQA,CAACN,EAAE,EAAE;EAAE;EAC7B,EAAA,IAAI5B,QAAQ,GAAG2B,WAAW,CAACC,EAAE,CAAC,CAAA;EAC9B,EAAA,IAAIY,IAAI,GAAA,OAAA,CAAA/G,MAAA,CAAUmG,EAAE,CAAClF,GAAG,EAAAjB,KAAAA,CAAAA,CAAAA,MAAA,CACtBmG,EAAE,CAAC9B,KAAK,CAACrG,MAAM,GAAG0H,QAAQ,CAACS,EAAE,CAAC9B,KAAK,CAAC,GAAG,WAAW,CAAArE,CAAAA,MAAA,CAElDuE,QAAQ,OAAAvE,MAAA,CAAOuE,QAAQ,CAAA,GAAK,EAAE,EAE7B,SAAA,CAAA,CAAA;EACH,EAAA,OAAOwC,IAAI,CAAA;EACb;;EC/DA;EAMO,SAASC,iBAAiBA,CAACC,QAAQ,EAAE;EAC1C;EACA,EAAA,IAAIjD,IAAI,GAAGF,SAAS,CAACmD,QAAQ,CAAC,CAAA;EAC9B;EACA,EAAA,IAAIF,IAAI,GAAGN,QAAQ,CAACzC,IAAI,CAAC,CAAA;EACzB;EACA;EACA;EACA;;EAEA;IACA,IAAIkD,QAAQ,GAAG,IAAIC,QAAQ,uBAAAnH,MAAA,CAAuB+G,IAAI,EAAI,GAAA,CAAA,CAAA,CAAA;;EAG1D;EACA,EAAA,OAAOG,QAAQ,CAAA;EACjB,CAAA;;EAGA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EC/CA,IAAIE,SAAS,GAAG,EAAE,CAAA;EAClB;EACA,IAAIC,OAAO,GAAG,KAAK,CAAA;EAEnB,SAASC,aAAaA,GAAG;EACvBF,EAAAA,SAAS,CAACxJ,OAAO,CAAC,UAAA2J,EAAE,EAAA;EAAA,IAAA,OAAIA,EAAE,EAAE,CAAA;KAAC,CAAA,CAAA;EAC7BF,EAAAA,OAAO,GAAG,KAAK,CAAA;EACfD,EAAAA,SAAS,GAAG,EAAE,CAAA;EAChB,CAAA;EAEO,SAASI,QAAQA,CAACD,EAAE,EAAE;EAC3B;EACA;EACAH,EAAAA,SAAS,CAAC3F,IAAI,CAAC8F,EAAE,CAAC,CAAA;IAClB,IAAIF,OAAO,KAAK,KAAK,EAAE;EACrBI,IAAAA,UAAU,CAACH,aAAa,EAAE,CAAC,CAAC,CAAA;EAC5BD,IAAAA,OAAO,GAAG,IAAI,CAAA;EAChB,GAAA;EACF,CAAA;;EAEA;EACA;;ECrBA,IAAIK,KAAK,GAAG,EAAE,CAAA;EACd,IAAIC,GAAG,GAAG,EAAE,CAAA;EAGZ,SAASC,mBAAmBA,GAAE;EAC1BF,EAAAA,KAAK,CAAC9J,OAAO,CAAC,UAAA4D,OAAO,EAAA;MAAA,OAAEA,OAAO,CAACqG,GAAG,EAAE,CAAA;KAAC,CAAA,CAAA;IACrCH,KAAK,GAAG,EAAE,CAAE;IACZC,GAAG,GAAG,EAAE,CAAA;EACZ,CAAA;EACO,SAASG,YAAYA,CAACtG,OAAO,EAAE;EAClC,EAAA,IAAMN,EAAE,GAAGM,OAAO,CAACN,EAAE,CAAA;EACrB,EAAA,IAAIyG,GAAG,CAACzG,EAAE,CAAC,IAAI,IAAI,EAAE;EACjBwG,IAAAA,KAAK,CAACjG,IAAI,CAACD,OAAO,CAAC,CAAA;EACnBmG,IAAAA,GAAG,CAACzG,EAAE,CAAC,GAAG,IAAI,CAAA;;EAEd;EACA;MACAsG,QAAQ,CAACI,mBAAmB,CAAC,CAAA;EACjC,GAAA;EACJ;;ECZA,IAAI1G,EAAE,GAAG,CAAC,CAAA;EAAC,IAEL6G,OAAO,gBAAA,YAAA;IACX,SAAAA,OAAAA,CAAYzI,EAAE,EAAE0I,QAAQ,EAAEC,QAAQ,EAAEzH,OAAO,EAAE;EAAAY,IAAAA,eAAA,OAAA2G,OAAA,CAAA,CAAA;MAC3C,IAAI,CAACzI,EAAE,GAAGA,EAAE,CAAA;MACZ,IAAI,CAAC2I,QAAQ,GAAGA,QAAQ,CAAA;MACxB,IAAI,CAACzH,OAAO,GAAGA,OAAO,CAAA;EACtB,IAAA,IAAI,CAACU,EAAE,GAAGA,EAAE,EAAE,CAAA;EACd,IAAA,IAAI,CAACgH,MAAM,GAAGF,QAAQ,CAAC;EACvB,IAAA,IAAI,CAACG,MAAM,GAAG,IAAIC,GAAG,EAAE,CAAC;MACxB,IAAI,CAACC,IAAI,GAAG,EAAE,CAAA;EACd,IAAA,IAAI,CAAC7I,GAAG,EAAE,CAAC;EACb,GAAA;EAAC8B,EAAAA,YAAA,CAAAyG,OAAA,EAAA,CAAA;MAAA/I,GAAA,EAAA,QAAA;EAAAC,IAAAA,KAAA,EAED,SAAA2C,MAAOlD,CAAAA,GAAG,EAAE;EAAE;EACZ,MAAA,IAAIwC,EAAE,GAAGxC,GAAG,CAACwC,EAAE,CAAA;QACf,IAAI,CAAC,IAAI,CAACiH,MAAM,CAACR,GAAG,CAACzG,EAAE,CAAC,EAAE;EACxB,QAAA,IAAI,CAACiH,MAAM,CAACG,GAAG,CAACpH,EAAE,CAAC,CAAA;EACnB,QAAA,IAAI,CAACmH,IAAI,CAAC5G,IAAI,CAAC/C,GAAG,CAAC,CAAA;EACnBA,QAAAA,GAAG,CAAC6C,MAAM,CAAC,IAAI,CAAC,CAAA;EAClB,OAAA;EACF,KAAA;EAAC,GAAA,EAAA;MAAAvC,GAAA,EAAA,KAAA;MAAAC,KAAA,EAED,SAAAO,GAAAA,GAAM;EACJuC,MAAAA,UAAU,CAAC,IAAI,CAAC,CAAC;EACjB,MAAA,IAAI,CAACmG,MAAM,EAAE,CAAC;QACdlG,SAAS,EAAE,CAAC;EACd,KAAA;EAAC,GAAA,EAAA;MAAAhD,GAAA,EAAA,QAAA;MAAAC,KAAA,EAED,SAAA4C,MAAAA,GAAS;QACPiG,YAAY,CAAC,IAAI,CAAC,CAAA;EAClB;EACA;EACA;EACF,KAAA;EAAC,GAAA,EAAA;MAAA9I,GAAA,EAAA,KAAA;MAAAC,KAAA,EAED,SAAA4I,GAAAA,GAAM;QACJ,IAAI,CAACrI,GAAG,EAAE,CAAA;EACZ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAuI,OAAA,CAAA;EAAA,CAGH,EAAA,CAAA;;EChDO,SAASQ,KAAKA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACrC;IACA,IAAI,CAACD,QAAQ,EAAE;EACb;MACA,OAAOE,SAAS,CAACD,KAAK,CAAC,CAAA;EACzB,GAAC,MAAM;EACL,IAAA,IAAME,aAAa,GAAGH,QAAQ,CAACI,QAAQ,CAAA;EACvC,IAAA,IAAID,aAAa,EAAE;EACjB,MAAA,IAAME,MAAM,GAAGL,QAAQ,CAAC;EACxB,MAAA,IAAMM,SAAS,GAAGD,MAAM,CAACE,UAAU,CAAC;;EAEpC,MAAA,IAAI5C,EAAE,GAAGuC,SAAS,CAACD,KAAK,CAAC,CAAA;QACzBK,SAAS,CAACE,YAAY,CAAC7C,EAAE,EAAE0C,MAAM,CAACI,WAAW,CAAC,CAAA;EAC9CH,MAAAA,SAAS,CAACI,WAAW,CAACL,MAAM,CAAC,CAAA;;EAE7B;EACA,MAAA,OAAO1C,EAAE,CAAA;EACX,KAAC,MAAM;EACL;EACA,MAAA,IAAIqC,QAAQ,CAACvH,GAAG,KAAKwH,KAAK,CAACxH,GAAG,EAAE;EAC9B;EACAuH,QAAAA,QAAQ,CAACrC,EAAE,CAAC4C,UAAU,CAACI,YAAY,CAACT,SAAS,CAACD,KAAK,CAAC,EAAED,QAAQ,CAACrC,EAAE,CAAC,CAAA;EACpE,OAAA;EACA;EACA;;EAEA;EACA,MAAA,IAAI,CAACqC,QAAQ,CAACvH,GAAG,EAAE;EAAE;EACnB,QAAA,IAAIuH,QAAQ,CAAC7D,IAAI,KAAK8D,KAAK,CAAC9D,IAAI,EAAE;EAChC6D,UAAAA,QAAQ,CAACrC,EAAE,CAACiD,WAAW,GAAGX,KAAK,CAAC9D,IAAI,CAAA;EACtC,SAAA;EACF,OAAA;;EAEA;QACA,IAAIwB,GAAE,GAAGsC,KAAK,CAACtC,EAAE,GAAGqC,QAAQ,CAACrC,EAAE,CAAA;EAC/BkD,MAAAA,gBAAgB,CAACZ,KAAK,EAAED,QAAQ,CAAC3J,IAAI,CAAC,CAAA;;EAEtC;EACA,MAAA,IAAIyK,WAAW,GAAGd,QAAQ,CAACjE,QAAQ,IAAI,EAAE,CAAA;EACzC,MAAA,IAAIgF,WAAW,GAAGd,KAAK,CAAClE,QAAQ,IAAI,EAAE,CAAA;QACtC,IAAI+E,WAAW,CAACtL,MAAM,GAAG,CAAC,IAAIuL,WAAW,CAACvL,MAAM,GAAG,CAAC,EAAE;EACpD;EACAwL,QAAAA,cAAc,CAACrD,GAAE,EAAEmD,WAAW,EAAEC,WAAW,CAAC,CAAA;EAC9C,OAAC,MAAM,IAAIA,WAAW,CAACvL,MAAM,GAAG,CAAC,EAAE;EACjC;EACA,QAAA,KAAK,IAAIsE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,WAAW,CAACvL,MAAM,EAAEsE,CAAC,EAAE,EAAE;EAC3C,UAAA,IAAI/B,KAAK,GAAGgJ,WAAW,CAACjH,CAAC,CAAC,CAAA;EAC1B6D,UAAAA,GAAE,CAACsD,WAAW,CAACf,SAAS,CAACnI,KAAK,CAAC,CAAC,CAAA;EAClC,SAAA;EACF,OAAC,MAAM,IAAI+I,WAAW,CAACtL,MAAM,GAAG,CAAC,EAAE;EACjC;UACAmI,GAAE,CAACuD,SAAS,GAAG,EAAE,CAAA;EACnB,OAAA;EACF,KAAA;EACF,GAAA;EACA;EACF,CAAA;;EAEA,SAASC,WAAWA,CAACnB,QAAQ,EAAEoB,QAAQ,EAAE;EACvC,EAAA,OAAQpB,QAAQ,CAACvH,GAAG,KAAK2I,QAAQ,CAAC3I,GAAG,IAAMuH,QAAQ,CAACxJ,GAAG,KAAK4K,QAAQ,CAAC5K,GAAI,CAAA;EAC3E,CAAA;EAEA,SAASwK,cAAcA,CAAClJ,MAAM,EAAEgJ,WAAW,EAAEC,WAAW,EAAE;EACxD;;EAEA;IACA,IAAIM,aAAa,GAAG,CAAC,CAAA;EACrB,EAAA,IAAIC,aAAa,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAA;EAClC,EAAA,IAAIS,WAAW,GAAGT,WAAW,CAACtL,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAIgM,WAAW,GAAGV,WAAW,CAACS,WAAW,CAAC,CAAA;IAE1C,IAAIE,aAAa,GAAG,CAAC,CAAA;EACrB,EAAA,IAAIC,aAAa,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAA;EAClC,EAAA,IAAIY,WAAW,GAAGZ,WAAW,CAACvL,MAAM,GAAG,CAAC,CAAA;EACxC,EAAA,IAAIoM,WAAW,GAAGb,WAAW,CAACY,WAAW,CAAC,CAAA;EAE1C,EAAA,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAI9F,QAAQ,EAAK;MACnC,IAAI6B,GAAG,GAAG,EAAE,CAAA;EACZ7B,IAAAA,QAAQ,CAAC3G,OAAO,CAAC,UAACgI,IAAI,EAAEe,KAAK,EAAK;QAChC,IAAIf,IAAI,CAAC5G,GAAG,EAAE;EACZoH,QAAAA,GAAG,CAACR,IAAI,CAAC5G,GAAG,CAAC,GAAG2H,KAAK,CAAC;EACxB,OAAA;EACF,KAAC,CAAC,CAAA;;EACF,IAAA,OAAOP,GAAG,CAAA;KACX,CAAA;EACD,EAAA,IAAIA,GAAG,GAAGiE,cAAc,CAACf,WAAW,CAAC,CAAA;;EAErC;EACA,EAAA,OAAOO,aAAa,IAAIE,WAAW,IAAIE,aAAa,IAAIE,WAAW,EAAE;MACnE,IAAI,CAACL,aAAa,EAAE;EAAE;EACpBA,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAC9C,KAAC,MAAM,IAAI,CAACG,WAAW,EAAE;EACvBA,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;OACzC,MAAM,IAAIJ,WAAW,CAACG,aAAa,EAAEI,aAAa,CAAC,EAAE;EACpD;EACA3B,MAAAA,KAAK,CAACuB,aAAa,EAAEI,aAAa,CAAC,CAAC;EACpCJ,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAC5CK,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;EAC5C;OACD,MAAM,IAAIN,WAAW,CAACK,WAAW,EAAEI,WAAW,CAAC,EAAE;EAChD7B,MAAAA,KAAK,CAACyB,WAAW,EAAEI,WAAW,CAAC,CAAA;EAC/BJ,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;EACxCK,MAAAA,WAAW,GAAGb,WAAW,CAAC,EAAEY,WAAW,CAAC,CAAA;EAC1C,KAAA;EACA;EAAA,SACK,IAAIR,WAAW,CAACG,aAAa,EAAEM,WAAW,CAAC,EAAE;EAChD7B,MAAAA,KAAK,CAACuB,aAAa,EAAEM,WAAW,CAAC,CAAA;EACjC9J,MAAAA,MAAM,CAAC0I,YAAY,CAACc,aAAa,CAAC3D,EAAE,EAAE6D,WAAW,CAAC7D,EAAE,CAAC8C,WAAW,CAAC,CAAA;EACjEa,MAAAA,aAAa,GAAGR,WAAW,CAAC,EAAEO,aAAa,CAAC,CAAA;EAC5CO,MAAAA,WAAW,GAAGb,WAAW,CAAC,EAAEY,WAAW,CAAC,CAAA;OACzC,MAAM,IAAIR,WAAW,CAACK,WAAW,EAAEE,aAAa,CAAC,EAAE;EAClD3B,MAAAA,KAAK,CAACyB,WAAW,EAAEE,aAAa,CAAC,CAAA;QACjC5J,MAAM,CAAC0I,YAAY,CAACgB,WAAW,CAAC7D,EAAE,EAAE2D,aAAa,CAAC3D,EAAE,CAAC,CAAA;EACrD6D,MAAAA,WAAW,GAAGV,WAAW,CAAC,EAAES,WAAW,CAAC,CAAA;EACxCG,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;EAC9C,KAAC,MAAM;EACL;EACA;EACA;EACA,MAAA,IAAIK,SAAS,GAAGlE,GAAG,CAAC8D,aAAa,CAAClL,GAAG,CAAC,CAAA;QACtC,IAAI,CAACsL,SAAS,EAAE;EAAE;UAChBhK,MAAM,CAAC0I,YAAY,CAACN,SAAS,CAACwB,aAAa,CAAC,EAAEJ,aAAa,CAAC3D,EAAE,CAAC,CAAA;EACjE,OAAC,MAAM;EACL;EACA,QAAA,IAAIoE,SAAS,GAAGjB,WAAW,CAACgB,SAAS,CAAC,CAAC;EACvChB,QAAAA,WAAW,CAACgB,SAAS,CAAC,GAAGE,SAAS,CAAC;UACnClK,MAAM,CAAC0I,YAAY,CAACuB,SAAS,CAACpE,EAAE,EAAE2D,aAAa,CAAC3D,EAAE,CAAC,CAAA;EACnDoC,QAAAA,KAAK,CAACgC,SAAS,EAAEL,aAAa,CAAC,CAAA;EACjC,OAAA;EACAA,MAAAA,aAAa,GAAGX,WAAW,CAAC,EAAEU,aAAa,CAAC,CAAA;EAC9C,KAAA;EACF,GAAA;IAEA,IAAIA,aAAa,IAAIE,WAAW,EAAE;MAChC,KAAK,IAAI7H,CAAC,GAAG2H,aAAa,EAAE3H,CAAC,IAAI6H,WAAW,EAAE7H,CAAC,EAAE,EAAE;QACjD,IAAI6D,EAAE,GAAGoD,WAAW,CAACY,WAAW,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,IAAI,GAAGZ,WAAW,CAACY,WAAW,GAAG,CAAC,CAAC,CAAChE,EAAE,CAAA;EACtF7F,MAAAA,MAAM,CAAC0I,YAAY,CAACN,SAAS,CAACa,WAAW,CAACjH,CAAC,CAAC,CAAC,EAAE6D,EAAE,CAAC,CAAC;EACnD;EACF,KAAA;EACF,GAAA;;IACA,IAAI0D,aAAa,IAAIE,WAAW,EAAE;MAChC,KAAK,IAAIzH,EAAC,GAAGuH,aAAa,EAAEvH,EAAC,IAAIyH,WAAW,EAAEzH,EAAC,EAAE,EAAE;EACjD,MAAA,IAAI/B,KAAK,GAAG+I,WAAW,CAAChH,EAAC,CAAC,CAAA;QAC1B,IAAI/B,KAAK,KAAKiK,SAAS,EAAE;EACvBlK,QAAAA,MAAM,CAAC4I,WAAW,CAAC3I,KAAK,CAAC4F,EAAE,CAAC,CAAA;EAC9B,OAAA;EACF,KAAA;EACF,GAAA;EACF,CAAA;EAEA,SAASsE,iBAAeA,CAAChC,KAAK,EAAE;EAAE;EACA;EAChC,EAAA,IAAInG,CAAC,GAAGmG,KAAK,CAAC5J,IAAI,CAAA;EAClB,EAAA,IAAI,CAACyD,CAAC,GAAGA,CAAC,CAACrC,IAAI,MAAMqC,CAAC,GAAGA,CAAC,CAACoI,IAAI,CAAC,EAAE;MAChCpI,CAAC,CAACmG,KAAK,CAAC,CAAA;EACV,GAAA;;EAEA;IACA,IAAIA,KAAK,CAACkC,iBAAiB,EAAE;EAC3B,IAAA,OAAO,IAAI,CAAA;EACb,GAAA;EACF,CAAA;EAEO,SAASjC,SAASA,CAACD,KAAK,EAAE;EAAE;EACjC,EAAA,IACExH,GAAG,GAKDwH,KAAK,CALPxH,GAAG,CAAA;MACHsD,QAAQ,GAINkE,KAAK,CAJPlE,QAAQ,CAAA;MAINkE,KAAK,CAHPzJ,GAAG,CAAA;MAGDyJ,KAAK,CAFP5J,IAAI,CAAA;UACJ8F,IAAI,GACF8D,KAAK,CADP9D,KAAI;EAEN;EACA,EAAA,IAAI,OAAO1D,GAAG,KAAK,QAAQ,EAAE;EAC3B;;EAEA;EACA,IAAA,IAAIwJ,iBAAe,CAAChC,KAAK,CAAC,EAAE;EAAE;EAC5B;EACA,MAAA,OAAOA,KAAK,CAACkC,iBAAiB,CAACC,GAAG,CAAA;EACpC,KAAA;MAEAnC,KAAK,CAACtC,EAAE,GAAG0E,QAAQ,CAACC,aAAa,CAAC7J,GAAG,CAAC,CAAA;MACtCoI,gBAAgB,CAACZ,KAAK,CAAC,CAAA;EACvBlE,IAAAA,QAAQ,CAAC3G,OAAO,CAAC,UAAA2C,KAAK,EAAI;EAAE;QAC1B,OAAOkI,KAAK,CAACtC,EAAE,CAACsD,WAAW,CAACf,SAAS,CAACnI,KAAK,CAAC,CAAC,CAAA;EAC/C,KAAC,CAAC,CAAA;EACJ,GAAC,MAAM;EACL;MACAkI,KAAK,CAACtC,EAAE,GAAG0E,QAAQ,CAACE,cAAc,CAACpG,IAAI,CAAC,CAAA;EAC1C,GAAA;EACA;IACA,OAAO8D,KAAK,CAACtC,EAAE,CAAA;EACjB,CAAA;;EAEA;EACA,SAASkD,gBAAgBA,CAACZ,KAAK,EAAiB;EAAA,EAAA,IAAfuC,QAAQ,GAAAjN,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAyM,SAAA,GAAAzM,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAC5C,EAAA,IAAIkN,QAAQ,GAAGxC,KAAK,CAAC5J,IAAI,IAAI,EAAE,CAAA;EAC/B,EAAA,IAAIsH,EAAE,GAAGsC,KAAK,CAACtC,EAAE,CAAA;EACjB;EACA,EAAA,IAAI+E,QAAQ,GAAGD,QAAQ,CAACE,KAAK,IAAI,EAAE,CAAA;EACnC,EAAA,IAAIC,QAAQ,GAAGJ,QAAQ,CAACG,KAAK,IAAI,EAAE,CAAA;EACnC;EACA,EAAA,KAAK,IAAInM,GAAG,IAAIoM,QAAQ,EAAE;EACxB,IAAA,IAAI,CAACF,QAAQ,CAAClM,GAAG,CAAC,EAAE;QAClBmH,EAAE,CAACgF,KAAK,CAAC,CAACnM,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EACvB,KAAA;EACF,GAAA;;EACA,EAAA,KAAK,IAAIA,IAAG,IAAIgM,QAAQ,EAAE;EACxB,IAAA,IAAI,CAACC,QAAQ,CAACjM,IAAG,CAAC,EAAE;EAClBmH,MAAAA,EAAE,CAACkF,eAAe,CAACrM,IAAG,CAAC,CAAA;EACzB,KAAA;EACF,GAAA;EACA,EAAA,KAAK,IAAIA,KAAG,IAAIiM,QAAQ,EAAE;EAAE;MAC1B,IAAIjM,KAAG,KAAK,OAAO,EAAE;EACnB,MAAA,KAAK,IAAIsM,SAAS,IAAIL,QAAQ,CAACE,KAAK,EAAE;EACpC;UACAhF,EAAE,CAACgF,KAAK,CAACG,SAAS,CAAC,GAAGL,QAAQ,CAACE,KAAK,CAACG,SAAS,CAAC,CAAA;EACjD,OAAA;EACF,KAAC,MAAM,IAAItM,KAAG,KAAK,OAAO,EAAE;EAC1BmH,MAAAA,EAAE,CAACoF,SAAS,GAAGN,QAAQ,CAAM,OAAA,CAAA,CAAA;EAC/B,KAAC,MAAM;QACL9E,EAAE,CAACqF,YAAY,CAACxM,KAAG,EAAEiM,QAAQ,CAACjM,KAAG,CAAC,CAAC,CAAA;EACrC,KAAA;EACF,GAAA;EACF;;EC7NO,SAASyM,cAAcA,CAACC,GAAG,EAAE;EAClCA,EAAAA,GAAG,CAACnO,SAAS,CAACoO,OAAO,GAAG,UAAUlD,KAAK,EAAE;MACvC,IAAMnJ,EAAE,GAAG,IAAI,CAAA;EACfA,IAAAA,EAAE,CAACsL,GAAG,GAAGrC,KAAK,CAACjJ,EAAE,CAACsL,GAAG,EAAEnC,KAAK,CAAC,CAAC;;EAE9B;KACD,CAAA;EACH,CAAA;;EAEO,SAASmD,cAAcA,CAACtM,EAAE,EAAE6G,EAAE,EAAE;EACrC,EAAgB7G,EAAE,CAAC0D,SAAS;EAC5B1D,EAAAA,EAAE,CAACsL,GAAG,GAAGzE,EAAE,CAAC;;EAEZ;EACA;EACA;EACA0F,EAAAA,QAAQ,CAACvM,EAAE,EAAE,aAAa,CAAC,CAAA;EAC3B;EACA,EAAA,IAAIwM,eAAe,GAAG,SAAlBA,eAAeA,GAAS;EAAE;EAC5B;EACAxM,IAAAA,EAAE,CAACqM,OAAO,CAACrM,EAAE,CAACyM,OAAO,EAAE,CAAC,CAAA;KACzB,CAAA;EACD;EACA,EAAA,IAAIhE,OAAO,CAACzI,EAAE,EAAEwM,eAAe,EAAE,YAAM,EACtC,EAAE,IAAI,CAAC,CAAC;EACTD,EAAAA,QAAQ,CAACvM,EAAE,EAAE,SAAS,CAAC,CAAA;EACzB,CAAA;EAEO,SAASuM,QAAQA,CAACvM,EAAE,EAAEW,IAAI,EAAE;IACjC,IAAM+L,QAAQ,GAAG1M,EAAE,CAAC0D,QAAQ,CAAC/C,IAAI,CAAC,CAAC;EACnC,EAAA,IAAI+L,QAAQ,EAAE;EAAE;EACd,IAAA,KAAK,IAAI1J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0J,QAAQ,CAAChO,MAAM,EAAEsE,CAAC,EAAE,EAAE;EACxC0J,MAAAA,QAAQ,CAAC1J,CAAC,CAAC,CAACgB,IAAI,CAAChE,EAAE,CAAC,CAAA;EACtB,KAAA;EACF,GAAA;EACF;;EChCA;EACO,SAAS2M,WAASA,CAACP,GAAG,EAAE;EAC7B;EACAA,EAAAA,GAAG,CAACnO,SAAS,CAAC2O,KAAK,GAAG,UAAU1L,OAAO,EAAE;EACvC;EACA,IAAA,IAAMlB,EAAE,GAAG,IAAI,CAAC;;EAEhB;EACAA,IAAAA,EAAE,CAAC0D,QAAQ,GAAG3C,cAAY,CAACf,EAAE,CAAC6M,WAAW,CAAC3L,OAAO,EAAEA,OAAO,CAAC,CAAA;EAE3DqL,IAAAA,QAAQ,CAACvM,EAAE,EAAE,cAAc,CAAC,CAAA;;EAE5B;EACAwD,IAAAA,SAAS,CAACxD,EAAE,CAAC,CAAC;;EAEduM,IAAAA,QAAQ,CAACvM,EAAE,EAAE,SAAS,CAAC,CAAA;EACvB;EACA;;EAEA,IAAA,IAAIA,EAAE,CAAC0D,QAAQ,CAACmD,EAAE,EAAE;QAClB7G,EAAE,CAAC8M,MAAM,CAAC9M,EAAE,CAAC0D,QAAQ,CAACmD,EAAE,CAAC,CAAA;EAC3B,KAAA;KACD,CAAA;EACDuF,EAAAA,GAAG,CAACnO,SAAS,CAAC6O,MAAM,GAAG,UAAUjG,EAAE,EAAE;MACnC,IAAM7G,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IAAMkB,OAAO,GAAGlB,EAAE,CAAC0D,QAAQ,CAAA;EAC3BmD,IAAAA,EAAE,GAAG0E,QAAQ,CAACwB,aAAa,CAAClG,EAAE,CAAC,CAAA;;EAE/B;EACA,IAAA,IAAI,CAAC3F,OAAO,CAAC8L,MAAM,EAAE;EACnB;EACA,MAAA,IAAIrF,QAAQ,GAAGzG,OAAO,CAACyG,QAAQ,CAAC;EAChC,MAAA,IAAI,CAACA,QAAQ,IAAId,EAAE,EAAE;UACnBc,QAAQ,GAAGd,EAAE,CAACoG,SAAS,CAAA;EACzB,OAAA;EACA,MAAA,IAAMD,MAAM,GAAGtF,iBAAiB,CAACC,QAAQ,CAAC,CAAA;QAC1CzG,OAAO,CAAC8L,MAAM,GAAGA,MAAM,CAAA;EACvB;EACF,KAAA;EACA;;EAEA;EACAV,IAAAA,cAAc,CAACtM,EAAE,EAAE6G,EAAE,CAAC,CAAA;KACvB,CAAA;EACD;EACAuF,EAAAA,GAAG,CAACnO,SAAS,CAACiP,SAAS,GAAGhF,QAAQ,CAAC;EACrC;;EClDO,SAASsD,aAAaA,CAACxL,EAAE,EAAE2B,GAAG,EAA0B;EAAA,EAAA,IAAxBpC,IAAI,GAAAd,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAyM,SAAA,GAAAzM,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAC9C;EACA,EAAA,IAAIiB,GAAG,GAAGH,IAAI,CAACG,GAAG,CAAA;EAClB,EAAA,IAAIA,GAAG,EAAE;MACP,OAAOH,IAAI,CAACG,GAAG,CAAA;EACjB,GAAA;EACA;IAAA,KAAAlB,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EANmDuG,QAAQ,OAAAjH,KAAA,CAAAQ,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;EAARqG,IAAAA,QAAQ,CAAArG,IAAA,GAAAH,CAAAA,CAAAA,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;EAAA,GAAA;EAO3D,EAAA,IAAI0C,aAAa,CAACK,GAAG,CAAC,EAAE;MACtB,OAAOwH,OAAK,CAACxH,GAAG,EAAEpC,IAAI,EAAEG,GAAG,EAAEuF,QAAQ,EAAEiG,SAAS,CAAC,CAAA;EACnD,GAAC,MAAM;EACL;MACA,IAAIiC,IAAI,GAAGnN,EAAE,CAAC0D,QAAQ,CAAC5C,UAAU,CAACa,GAAG,CAAC,CAAA;EAEtC,IAAA,OAAOwJ,eAAe,CAACnL,EAAE,EAAE2B,GAAG,EAAEpC,IAAI,EAAEG,GAAG,EAAEuF,QAAQ,EAAEkI,IAAI,CAAC,CAAA;EAC5D,GAAA;EACF,CAAA;EAEA,SAAShC,eAAeA,CAACnL,EAAE,EAAE2B,GAAG,EAAEpC,IAAI,EAAEG,GAAG,EAAEuF,QAAQ,EAAEkI,IAAI,EAAE;EAC3D,EAAA,IAAI7N,QAAQ,CAAC6N,IAAI,CAAC,EAAE;MAClBA,IAAI,GAAGnN,EAAE,CAAC0D,QAAQ,CAAC0J,KAAK,CAACC,MAAM,CAACF,IAAI,CAAC,CAAA;EACvC,GAAA;IACA5N,IAAI,CAACoB,IAAI,GAAG;MACVyK,IAAI,EAAA,SAAAA,IAACjC,CAAAA,KAAK,EAAE;EACV;QACA,IAAIlI,KAAK,GAAGkI,KAAK,CAACkC,iBAAiB,GAAG,IAAI8B,IAAI,CAAC;EAACG,QAAAA,YAAY,EAAE,IAAA;EAAI,OAAC,CAAC,CAAA;EACpE;EACArM,MAAAA,KAAK,CAAC6L,MAAM,EAAE,CAAC;EACjB,KAAA;KACD,CAAA;;EAED;EACA,EAAA,OAAO3D,OAAK,CAAAzI,gBAAAA,CAAAA,MAAA,CAAkByM,IAAI,CAACI,GAAG,EAAA,GAAA,CAAA,CAAA7M,MAAA,CAAIiB,GAAG,CAAIpC,EAAAA,IAAI,EAAEG,GAAG,EAAEwL,SAAS,EAAE;EAACiC,IAAAA,IAAI,EAAJA,IAAI;EAAElI,IAAAA,QAAQ,EAARA,QAAAA;EAAQ,GAAC,CAAC,CAAA;EAC1F,CAAA;EAEO,SAASwG,cAAcA,CAACzL,EAAE,EAAEqF,IAAI,EAAE;IACvC,OAAO8D,OAAK,CAAC+B,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAEA,SAAS,EAAE7F,IAAI,CAAC,CAAA;EAChE,CAAA;EAEA,SAAS8D,OAAKA,CAACxH,GAAG,EAAEpC,IAAI,EAAEG,GAAG,EAAEuF,QAAQ,EAAEI,IAAI,EAAEmI,gBAAgB,EAAE;IAC/D,OAAO;EACL7L,IAAAA,GAAG,EAAHA,GAAG;EACHpC,IAAAA,IAAI,EAAJA,IAAI;EACJG,IAAAA,GAAG,EAAHA,GAAG;EACHuF,IAAAA,QAAQ,EAARA,QAAQ;EACRI,IAAAA,IAAI,EAAJA,IAAI;EACJmI,IAAAA,gBAAgB,EAAhBA,gBAAAA;KACD,CAAA;EACH,CAAA;;EAEA;;EAEA;EACA;;ECjDO,SAASC,WAAWA,CAACrB,GAAG,EAAE;EAC/B;EACA;EACA;;EAEAA,EAAAA,GAAG,CAACnO,SAAS,CAACyP,EAAE,GAAG,YAAY;EAC7B,IAAA,OAAOlC,aAAa,CAAA1M,KAAA,UAAC,IAAI,CAAA,CAAA4B,MAAA,CAAA1C,KAAA,CAAAC,SAAA,CAAAiB,KAAA,CAAA8E,IAAA,CAAKvF,SAAS,CAAA,CAAA,CAAC,CAAC;KAC1C,CAAA;;EACD2N,EAAAA,GAAG,CAACnO,SAAS,CAAC0P,EAAE,GAAG,UAAUtI,IAAI,EAAE;EACjC,IAAA,OAAOoG,cAAc,CAAC,IAAI,EAAEpG,IAAI,CAAC,CAAA;KAClC,CAAA;EACD+G,EAAAA,GAAG,CAACnO,SAAS,CAAC2P,EAAE,GAAG,UAAUC,GAAG,EAAE;EAChC,IAAA,OAAOA,GAAG,IAAI,IAAI,GAAG,EAAE,GAAIrO,OAAA,CAAOqO,GAAG,MAAK,QAAQ,GAAGnH,IAAI,CAACC,SAAS,CAACkH,GAAG,CAAC,GAAGA,GAAI,CAAA;KAChF,CAAA;EACDzB,EAAAA,GAAG,CAACnO,SAAS,CAACwO,OAAO,GAAG,YAAY;MAClC,IAAMzM,EAAE,GAAG,IAAI,CAAA;EACf,IAAA,IACEgN,MAAM,GACJhN,EAAE,CAAC0D,QAAQ,CADbsJ,MAAM,CAAA;MAER,IAAI7D,KAAK,GAAG6D,MAAM,CAAChJ,IAAI,CAAChE,EAAE,CAAC,CAAC;;EAE5B,IAAA,OAAOmJ,KAAK,CAAA;KACb,CAAA;EACH;;EC5Be,SAASwD,SAASA,CAACP,GAAG,EAAE;EACrCA,EAAAA,GAAG,CAAC0B,KAAK,GAAG,UAAUA,KAAK,EAAE;EAC3B;MACA,IAAI,CAAC5M,OAAO,GAAGH,YAAY,CAAC,IAAI,CAACG,OAAO,EAAE4M,KAAK,CAAC,CAAA;KACjD,CAAA;EACD;EACF;;ECNO,IAAMC,WAAW,GAAG,CACvB,WAAW,EACX,WAAW,EACX,QAAQ,CACX;;ECFc,SAASC,kBAAkBA,CAAC5B,GAAG,EAAC;EAC3C2B,EAAAA,WAAW,CAACzP,OAAO,CAAC,UAAA0G,IAAI,EAAE;EAAE;MACxBoH,GAAG,CAACpH,IAAI,CAAC,GAAG,UAAUpD,EAAE,EAACqM,UAAU,EAAE;QACjC,IAAGjJ,IAAI,KAAK,WAAW,EAAC;EACpB;EACA;EACA;EACAiJ,QAAAA,UAAU,GAAG7B,GAAG,CAACiB,MAAM,CAACY,UAAU,CAAC,CAAA;EACvC,OAMA;QACA,IAAI,CAAC/M,OAAO,CAAC8D,IAAI,GAAC,GAAG,CAAC,CAACpD,EAAE,CAAC,GAAGqM,UAAU,CAAA;OAC1C,CAAA;EACL,GAAC,CAAC,CAAA;EACN;;EClBe,SAASC,UAAUA,CAAC9B,GAAG,EAAE;EACtC;EACA;IACA,IAAImB,GAAG,GAAG,CAAC,CAAA;EACXnB,EAAAA,GAAG,CAACiB,MAAM,GAAG,UAAUc,aAAa,EAAE;EACpC,IAAA,IAAMC,GAAG,GAAG,SAASC,YAAYA,CAACnN,OAAO,EAAE;EACzC,MAAA,IAAI,CAAC0L,KAAK,CAAC1L,OAAO,CAAC,CAAA;OACpB,CAAA;EACDkN,IAAAA,GAAG,CAACb,GAAG,GAAGA,GAAG,EAAE,CAAA;MACfa,GAAG,CAACnQ,SAAS,GAAGE,MAAM,CAACC,MAAM,CAAC,IAAI,CAACH,SAAS,CAAC,CAAA;EAC7CmQ,IAAAA,GAAG,CAACnQ,SAAS,CAAC4O,WAAW,GAAGuB,GAAG,CAAA;MAC/BA,GAAG,CAAClN,OAAO,GAAGH,cAAY,CACxB,IAAI,CAACG,OAAO,EACZiN,aAAa,CACd,CAAA;EACD;EACA;EACA;EACA,IAAA,OAAOC,GAAG,CAAA;KACX,CAAA;EACH;;EChBO,SAASE,aAAaA,CAAClC,GAAG,EAAE;EACjC;EACAA,EAAAA,GAAG,CAAClL,OAAO,GAAG,EAAE,CAAA;IAChByL,SAAS,CAACP,GAAG,CAAC,CAAA;;EAEd;;EAEA2B,EAAAA,WAAW,CAACzP,OAAO,CAAC,UAAA0G,IAAI,EAAI;MAC1BoH,GAAG,CAAClL,OAAO,CAAC8D,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,CAAA;EAC9B,GAAC,CAAC,CAAA;EACFoH,EAAAA,GAAG,CAAClL,OAAO,CAACkM,KAAK,GAAGhB,GAAG,CAAC;;EAExB;IACA8B,UAAU,CAAC9B,GAAG,CAAC,CAAA;IACf4B,kBAAkB,CAAC5B,GAAG,CAAC,CAAA;EACzB;;ECrBA;EAMA,SAASA,GAAGA,CAAClL,OAAO,EAAE;EACpB;EACA,EAAA,IAAI,CAAC0L,KAAK,CAAC1L,OAAO,CAAC,CAAA;EAErB,CAAA;;EAEA;;AAEAyL,aAAS,CAACP,GAAG,CAAC,CAAC;EACfqB,WAAW,CAACrB,GAAG,CAAC,CAAA;EAChBD,cAAc,CAACC,GAAG,CAAC,CAAA;;EAEnB;EACAkC,aAAa,CAAClC,GAAG,CAAC,CAAA;EAOlB,IAAImC,GAAG,GAAG,IAAInC,GAAG,CAAC;EAChB7M,EAAAA,IAAI,EAAE;EAAC2G,IAAAA,IAAI,EAAE,OAAA;EAAO,GAAA;EACtB,CAAC,CAAC,CAAA;EACF,IAAIsI,OAAO,GAAG9G,iBAAiB,CAIvB,6NAAA,CAAA,CAAA;EACR,IAAIyB,KAAK,GAAGqF,OAAO,CAACxK,IAAI,CAACuK,GAAG,CAAC,CAAA;EAE7B,IAAI1H,EAAE,GAAGuC,SAAS,CAACD,KAAK,CAAC,CAAA;EACzBoC,QAAQ,CAACkD,IAAI,CAACtE,WAAW,CAACtD,EAAE,CAAC,CAAA;EAE7B,IAAI6H,GAAG,GAAG,IAAItC,GAAG,CAAC;EAChB7M,EAAAA,IAAI,EAAE;EAAC2G,IAAAA,IAAI,EAAE,IAAI;EAAEyI,IAAAA,GAAG,EAAE,EAAA;EAAE,GAAA;EAC5B,CAAC,CAAC,CAAA;EACF,IAAIC,OAAO,GAAGlH,iBAAiB,CAMvB,kUAAA,CAAA,CAAA;EACR,IAAImH,MAAM,GAAGD,OAAO,CAAC5K,IAAI,CAAC0K,GAAG,CAAC,CAAA;EAE9BvG,UAAU,CAAC,YAAM;EACfc,EAAAA,KAAK,CAACE,KAAK,EAAE0F,MAAM,CAAC,CAAC;EACvB,CAAC,EAAE,IAAI,CAAC;;;;;;;;"}